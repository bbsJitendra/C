{"version":3,"file":"main.js","mappings":"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","names":["AlphaNumericDirective","constructor","element","control","this","appAlphabetSpaceOnly","onInput","event","input","nativeElement","console","log","value","trimStart","test","newValue","replace","setValue","static","t","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_0__","lG2","selectors","hostBindings","rf","ctx","$event","AlphabetNumericWithSpecialCharacterDirective","AlphabetOnlyDirective","OnlyNumericDirective","URLS","baseAddressUrl","environment","addressHostName","baseApiHostUrl","apiHostName","addressUrl","endpoint","ContactPerson","methods","CheckContactPersonEmailExistence","CheckContactPersonExistenceByContactNo","CorporateOfficeMaster","GetAllCorporateOfficeMasters","GetCorporateOfficeMasterById","AddCorporateOfficeMaster","UpdateCorporateOfficeMaster","DeleteOfficeContactPerson","CalculateProfileCompletionPercentage","GetCorporateOfficeDropdown","GetAllOfficeDetail","DepartmentMaster","GetAllDepartmentMasters","GetAllDepartmentMasterById","AddDepartmentMaster","UpdateDepartmentMaster","DesignationMaster","GetAllDesignationMasters","GetDesignationMasterById","AddDesignationMaster","UpdateDesignationMaster","DropdownType","GetAllDropdownTypeMaster","GetAllDropdownItem","GetDropdownType","GetDropdownitem","GHG","GetGHGItemsByDCFGroupId","GetGHGItemsByDCFGroupIdScope3","DeleteGHGItem","DeleteGHGItemScope3","AddUpdateGHGItemsByDCFGroupId","AddUpdateGHGItemsByDCFGroupIdScope3","GetFactor","CalculateEmissions","GetUnitByDropdownItemID","CountOfGHGPendingApproval","AddSupplierlist","GetAllSupplierList","GetAllGHGEmissionEmplyoee","GetAllSubDropdownItems","GetAllGhgemissionSource","GetAllGHGEmissionSoldProduct","GetAllGHGEmissionFranchise","GetAllGHGEmissionInvestmentPortfolio","UploadEmployeeExcelData","ExtactExcelDataForSoldProduct","ExtactExcelForGHGEmissionInvestmentPortfolio","ExtactExcelForGHGEmissionFrenchise","ExtactExcelForGhgemissionLeasedAsset","DownloadEmployeeExcelTemplate","DownloadSoldProductExcelTemplate","DownloadInvestmentPortfolioExcelTemplate","DownloadFrenchiseExcelTemplate","DownloadLeasedAssetExcelTemplate","AddGHGEmissionSoldProduct","AddGHGEmissionInvestmentPortfolio","AddGHGEmissionFrenchise","AddGhgemissionLeasedAsset","GetAllGHGEmissionLeasedAsset","GetAllGHGEmissionWorkArrangement","GetMajorContributorInGHGEmission","DownloadtExcelTemplateCategory1and2","DownloadtExcelTemplateCategory6","DownloadtExcelTemplateCategory7","UploadExcelForGHGEmissionCatgeory1and2","UploadExcelForGHGEmissionCatgeory6","UploadExcelForGHGEmissionCatgeory7","GHGEmissionDataBatchHistoryByBatchId","GHGAvoidance","GetAllGhgavoidanceCategory","GetGhgavoidanceDropdowntype","GetAllGHGAvoidanceDisplacementConfig","GetAllGHGAvoidanceFuel","GetAllGHGAvoidanceFuelType","AddGHGAvoidanceDisplacementConfig","GetGHGAvoidanceDisplacementConfigByGroupId","GHGAvoidanceUnit","GetGhgAvoidanceCalculation","GHGAvoidanceDataBatchHistoryByBatchId","login","userLogin","refreshToken","logout","resetUserPassword","changePassword","SendOTP","ValidateOtp","Master","GetAllCountryMaster","GetAllStateMaster","GetStateByCountryId","GetAllCityMaster","GetCityByStateId","AddCityMaster","GetAllGender","GetAllConfiguration","GetAllCategoryMaster","GetAllIndustryTypeMaster","GetAllModuleMaster","GetAllSubModuleMaster","GetAllUnitTypeMaster","GetAllUnitMaster","GetAllUserTypeMaster","GetAllDataCapturingFrequency","GetReportingFrequencyMaster","GetAllProjectType","GetAllLocation","GetDataCapturingSlotGroup","GetSubModuleByModuleId","GetCategoryByModuleAndSubModule","GetAllModuleSubModuleMaster","GetDomain","RegionalOfficeMaster","GetAllRegionalOfficeMaster","GetRegionalOfficeMasterById","GetAllRegionalOfficeMasterByUserId","AddRegionalOfficeMaster","UpdateRegionalOfficeMaster","DeleteRegionalOfficeMasterById","GetRegionalOfficeDropdown","SiteOfficeMaster","GetAllSiteOfficeMaster","GetSiteOfficeMasterById","GetAllSiteOfficeMasterByRegionalOfficeId","AddSiteOfficeMaster","UpdateSiteOfficeMaster","DeleteSiteOfficeMasterById","GetSiteOfficeForDropdown","Supplier","GetAllSupplierTypeMaster","AddSupplierTypeMaster","UpdateSupplierTypeMaster","GetAllSupplierApplicationStatusMaster","GetAllSupplierQuestionCategoryMaster","AddSupplierQuestionCategoryMaster","UpdateSupplierQuestionCategoryMaster","GetSupplierListById","UpdateSupplierlist","GetAllSupplierQuestionMaster","GetDashboardRiskExposure","UpdateSupplierQuestionAnswer","GetSupplierAllQuestionTxn","UpdateSupplierApplicationStatus","IsAnExistingContact","IsAnExistingEmail","User","GetAllUserMaster","AddUserDetail","UpdateUserDetail","ActiveDeactive","UserAccessManagement","GetUserAccessManagementList","AddUserAccessModuleById","AddUserAccessModule","GetUserAccessModuleDetailsByUserId","WeatherForecast","PBIReport","GetEmbedReport","commonData","pageSize","currentPage","HardcodedValue","ghgAvoidanceSubModuleID","ghgAvoidanceModuleId","ghgAvoidanceCategoryId","GhgEmissionScopeHardCodedValue","scope3Cat1","scope3Cat2","scope3Cat3","scope3Cat4","scope3Cat5","scope3Cat6","scope3Cat7","scope3Cat8","scope3Cat9","scope3Cat10","scope3Cat11","scope3Cat12","scope3Cat13","scope3Cat14","scope3Cat15","ghgEmissionAvoidanceSaveSubmitButtonId","draftButtonId","submitButtonId","approvedButtonId","rejectButtonId","ghgEmissionAvoidanceActionType","addAction","editAction","deleteAction","_r6","ctx_r5","closeModel","_r8","ctx_r7","_r10","ctx_r9","ctx_r3","submitbtnTxt","_r12","ctx_r11","ConfirmationDialogComponent","data","dialogRef","modelData","button","submitbtnText","responseType","close","MAT_DIALOG_DATA","Xpm","decls","vars","consts","template","ConfirmationDialogComponent_ng_container_5_Template","ConfirmationDialogComponent_button_12_Template","ConfirmationDialogComponent_button_13_Template","ConfirmationDialogComponent_button_14_Template","ConfirmationDialogComponent_button_15_Template","isDelete","header","bodyData","isDiscard","hideAllButtonsLeftSubmit","isSubmit","SharedModule","_angular_core__WEBPACK_IMPORTED_MODULE_4__","oAB","cJS","imports","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","NgMultiSelectDropDownModule","forRoot","MatDialogModule","MatSelectModule","MatSelectSearchModule","ModalModule","NgxSpinnerModule","ToastrModule","preventDuplicates","SweetAlert2Module","CalendarModule","PopoverModule","TreeSelectModule","DropdownModule","MatDatepickerModule","MatNativeDateModule","MatInputModule","NgxPaginationModule","SidebarModule","OverlayPanelModule","PowerBIEmbedModule","HttpClientModule","CommonService","http","userLoggedIn","Subject","publicKey","userMenu","JSON","parse","localStorage","getItem","superAdminMenu","name","icon","routerLink","userRole","isChild","isVisible","formData","requestBody","username","password","encryptData","trim","post","get","getDomain","sendOTP","VerifyOTP","GenerateRefreshToken","token","email","accessToken","searchAddress","city","state","country","postalCode","paramData","postalcode","format","addressdetails","params","getCountryList","getStateList","countryId","param","CountryId","getAllCountryStateList","getCityList","stateId","StateId","getAllCountryStateCityList","getReqLoginUserName","getRole","roleName","isUserLoggedIn","rsa","forge","publicKeyFromPem","window","btoa","encrypt","indiaStateColor","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Goa","Gujarat","Haryana","Jharkhand","Karnataka","Kerala","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Orissa","Puducherry","Punjab","Rajasthan","Sikkim","Tripura","Uttaranchal","_angular_core__WEBPACK_IMPORTED_MODULE_3__","Yz7","factory","ɵfac","providedIn","MessageService","toast","successToast","message","success","errorToast","error","showAlert","Swal","_angular_core__WEBPACK_IMPORTED_MODULE_1__","UserAccessManagementService","commSvc","getCorporateOfficeList","getReginalOfficeList","corporateOfficeId","requestUserLoginName","requestId","croporateOfficeId","getSiteOfficeList","siteOfficeId","regionalOfficeId","getUsersAccessManagementList","getModuleList","getSubModuleList","getModuleSubModuleList","getUserModuleAccessList","id","Id","addUserAccessModule","userId","type","getUserAccessModules","i2","_angular_core__WEBPACK_IMPORTED_MODULE_2__","production","BehaviorSubjectCollectionService","isUserLogin","BehaviorSubject","core","_r7","ctx_r6","showPassword","_r9","ctx_r8","LoginComponent_div_17_img_12_Template","LoginComponent_div_17_img_13_Template","_r11","ctx_r10","generateCaptcha","ctx_r12","ctx_r1","loginForm","_c1","tmp_1_0","invalid","touched","tmp_2_0","tmp_6_0","_c2","_r18","ctx_r17","newPassword","_r20","ctx_r19","_r22","ctx_r21","confirmPassword","_r24","ctx_r23","LoginComponent_div_18_img_11_Template","LoginComponent_div_18_img_12_Template","LoginComponent_div_18_img_18_Template","LoginComponent_div_18_img_19_Template","_r26","ctx_r25","passwordChange","ctx_r2","changePasswordForm","LoginComponent","_fb","router","commonService","behaviorSubjectCollection","spinner","messageService","_dialog","isResetPasswordEnable","StrongPasswordRegx","validRoute","siteKey","captcha","myInterval","activeSlideIndex","slides","image","group","Validators","required","ngAfterViewInit","startCarouselManual","ngOnInit","changeFormInitialize","setTimeout","myCarousel","document","querySelector","bootstrap","Carousel","interval","wrap","touch","keyboard","viewportWidth","innerWidth","canvasHeight","parseFloat","slice","controls","reset","chars","split","length","Math","floor","random","i","c","getElementById","getContext","canvas","height","clearRect","moveTo","fillStyle","lineTo","strokeStyle","stroke","font","fillText","currentPassword","pattern","removeLocalStorageData","removeItem","valid","markAllAsTouched","show","subscribe","response","userName","loginResponse","isPasswordChanged","setItem","stringify","next","userAccessModule","sidebarMenu","findIndex","permission","moduleName","toLowerCase","isActive","showPopupRegardingResolution","navigate","hide","err","hasError","userNameOrEmail","oldPassword","res","isSuccess","errorMessage","open","width","isCancel","disableClose","i3","i4","i5","i6","i7","viewQuery","LoginComponent_div_15_Template","LoginComponent_div_17_Template","LoginComponent_div_18_Template","_c0","ctx_r0","imageUrl","menu_r3","$implicit","routeChange","SidebarComponent_ul_4_li_1_img_2_Template","ctx_r4","SidebarComponent_ul_4_li_1_Template","SidebarComponent","changeDetector","currentUrl","location","pathname","detectChanges","Photo","profile","logOut","afterClosed","result","clear","path","cl","SidebarComponent_div_1_Template","SidebarComponent_div_2_Template","SidebarComponent_ul_4_Template","CommonLayoutComponent","ForgetPasswordComponent","ForgetPassword","UserEmailId","ForgotForm","EmailVerify","userMailID","carousel","OtpComponent","Email","mailId","OtpForm","OTP","ngOnDestroy","ChangemailId","ResendOTP","OTPSend","otp","UnAuthorisedComponent","PageNotFoundComponent","routes","pathMatch","redirectTo","component","canActivate","logGuardGuard","route","_router","inject","Router","includes","role","loadChildren","Promise","all","__webpack_require__","e","then","bind","m","OrganizationModule","SupervisorModule","AppRoutingModule","RouterModule","AppComponent","_userAccessSvc","title","flag","count","topToWindow","scrollTo","accessTokenExpirationTime","timeToWait","Date","getTime","timer$","timer","timerUnsubscribe","generateRefreshToken","unsubscribe","obj","ApiInterceptorInterceptor","intercept","request","newRequest","url","clone","setHeaders","Authorization","Pragma","handle","pipe","catchError","HttpErrorResponse","status","throwError","AppModule","provide","HTTP_INTERCEPTORS","useClass","multi","DatePipe","BrowserModule","BrowserAnimationsModule","TreeModule","RecaptchaModule","RecaptchaFormsModule","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","sources":["./src/app/Directive/alpha-numeric.directive.ts","./src/app/Directive/alphabet-numeric-with-special-character.directive.ts","./src/app/Directive/alphabet-only.directive.ts","./src/app/Directive/only-numeric.directive.ts","./src/app/app-url.constant.ts","./src/app/components/shared/commonData.ts","./src/app/components/shared/confirmation-dialog/confirmation-dialog.component.html","./src/app/components/shared/confirmation-dialog/confirmation-dialog.component.ts","./src/app/components/shared/shared.module.ts","./src/app/services/common/common.service.ts","./src/app/services/message.service.ts","./src/app/services/user-access-management.service.ts","./src/environments/environment.ts","./src/app/services/behaviorSubjectCollection.service.ts","./src/app/components/common/login/login.component.html","./src/app/components/common/login/login.component.ts","./src/app/components/common/sidebar/sidebar.component.html","./src/app/components/common/sidebar/sidebar.component.ts","./src/app/components/common/common-layout/common-layout.component.ts","./src/app/components/common/common-layout/common-layout.component.html","./src/app/guards/log-guard.guard.ts","./src/app/components/common/forget-password/forget-password.component.ts","./src/app/components/common/forget-password/forget-password.component.html","./src/app/components/common/otp/otp.component.ts","./src/app/components/common/otp/otp.component.html","./src/app/components/un-authorised/un-authorised.component.ts","./src/app/components/un-authorised/un-authorised.component.html","./src/app/components/page-not-found.component.ts","./src/app/components/page-not-found.component.html","./src/app/route/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/api-interceptor.interceptor.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appAlphaNumeric]',\r\n})\r\nexport class AlphaNumericDirective {\r\n  @Input('appAlphabetSpaceOnly') appAlphabetSpaceOnly: boolean = false;\r\n\r\n  constructor(\r\n    public element: ElementRef,\r\n    private control: NgControl\r\n  ) {}\r\n\r\n  @HostListener('input', ['$event']) onInput(event: KeyboardEvent) {\r\n    const input = this.element.nativeElement as HTMLInputElement;\r\n    // const regex = /^[a-zA-Z\\s]*$/;\r\n    const regex = /^[a-zA-Z0-9][a-zA-Z0-9\\s]*$/;\r\n    console.log();\r\n\r\n    const value = input.value.trimStart();\r\n    if (!regex.test(value)) {\r\n      const newValue = value.replace(/[^a-zA-Z\\s]/g, '');\r\n      this.control.control?.setValue(newValue); //\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appAlphabetNumericWithSpecialCharacter]',\r\n})\r\nexport class AlphabetNumericWithSpecialCharacterDirective {\r\n  @Input('appAlphabetSpaceOnly') appAlphabetSpaceOnly: boolean = false;\r\n\r\n  constructor(\r\n    public element: ElementRef,\r\n    private control: NgControl\r\n  ) {}\r\n\r\n  @HostListener('input', ['$event']) onInput(event: KeyboardEvent) {\r\n    const input = this.element.nativeElement as HTMLInputElement;\r\n    // const regex = /^[a-zA-Z\\s]*$/;\r\n    // const regex = /[^a-zA-Z0-9][^a-zA-Z0-9\\s.&@/]*$/;\r\n    const regex = /^[a-zA-Z0-9][a-zA-Z0-9\\s.&@]*$/;\r\n    console.log();\r\n\r\n    const value = input.value.trimStart();\r\n    if (!regex.test(value)) {\r\n      const newValue = value.replace(/[^a-zA-Z0-9\\s.&@/]/g, '');\r\n      this.control.control?.setValue(newValue); //\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appAlphabetOnly]',\r\n})\r\nexport class AlphabetOnlyDirective {\r\n  @Input('appAlphabetSpaceOnly') appAlphabetSpaceOnly: boolean = false;\r\n\r\n  constructor(\r\n    public element: ElementRef,\r\n    private control: NgControl\r\n  ) {}\r\n\r\n  @HostListener('input', ['$event']) onInput(event: KeyboardEvent) {\r\n    const input = this.element.nativeElement as HTMLInputElement;\r\n    // const regex = /^[a-zA-Z\\s]*$/;\r\n    const regex = /^[a-zA-Z][a-zA-Z\\s]*$/;\r\n    console.log();\r\n\r\n    const value = input.value.trimStart();\r\n    if (!regex.test(value)) {\r\n      const newValue = value.replace(/[^a-zA-Z\\s]/g, '');\r\n      this.control.control?.setValue(newValue); //\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appOnlyNumeric]',\r\n})\r\nexport class OnlyNumericDirective {\r\n  constructor(\r\n    public element: ElementRef,\r\n    private control: NgControl\r\n  ) {}\r\n\r\n  @HostListener('input', ['$event']) onInput(event: KeyboardEvent) {\r\n    const input = this.element.nativeElement as HTMLInputElement;\r\n    const regex = /^[1-9][0-9]*$/;\r\n    console.log();\r\n\r\n    const value = input.value.trimStart();\r\n    if (!regex.test(value)) {\r\n      const newValue = value.replace(/[^0-9]/g, '');\r\n      this.control.control?.setValue(newValue); //\r\n    }\r\n  }\r\n}\r\n","import { environment } from 'src/environments/environment';\r\n\r\nexport const URLS = {\r\n  baseAddressUrl: `${environment.addressHostName}/`,\r\n  baseApiHostUrl: `${environment.apiHostName}/`,\r\n  addressUrl: {\r\n    endpoint: `search.php`,\r\n  },\r\n  ContactPerson: {\r\n    endpoint: 'ContactPerson/',\r\n    methods: {\r\n      CheckContactPersonEmailExistence: 'CheckContactPersonEmailExistence',\r\n      CheckContactPersonExistenceByContactNo:\r\n        'CheckContactPersonExistenceByContactNo',\r\n    },\r\n  },\r\n  CorporateOfficeMaster: {\r\n    endpoint: 'CorporateOfficeMaster/',\r\n    methods: {\r\n      GetAllCorporateOfficeMasters: 'GetAllCorporateOfficeMasters',\r\n      GetCorporateOfficeMasterById: 'GetCorporateOfficeMasterById',\r\n      AddCorporateOfficeMaster: 'AddCorporateOfficeMaster',\r\n      UpdateCorporateOfficeMaster: 'UpdateCorporateOfficeMaster',\r\n      DeleteOfficeContactPerson: 'DeleteOfficeContactPerson',\r\n      CalculateProfileCompletionPercentage:\r\n        'CalculateProfileCompletionPercentage',\r\n      GetCorporateOfficeDropdown: 'GetCorporateOfficeDropdown',\r\n      GetAllOfficeDetail: 'GetAllOfficeDetail',\r\n    },\r\n  },\r\n  DepartmentMaster: {\r\n    endpoint: 'DepartmentMaster/',\r\n    methods: {\r\n      GetAllDepartmentMasters: 'GetAllDepartmentMasters',\r\n      GetAllDepartmentMasterById: 'GetAllDepartmentMasterById',\r\n      AddDepartmentMaster: 'AddDepartmentMaster',\r\n      UpdateDepartmentMaster: 'UpdateDepartmentMaster',\r\n    },\r\n  },\r\n  DesignationMaster: {\r\n    endpoint: 'DesignationMaster/',\r\n    methods: {\r\n      GetAllDesignationMasters: 'GetAllDesignationMasters',\r\n      GetDesignationMasterById: 'GetDesignationMasterById',\r\n      AddDesignationMaster: 'AddDesignationMaster',\r\n      UpdateDesignationMaster: 'UpdateDesignationMaster',\r\n    },\r\n  },\r\n  DropdownType: {\r\n    endpoint: 'DropdownType/',\r\n    methods: {\r\n      GetAllDropdownTypeMaster: 'GetAllDropdownTypeMaster',\r\n      GetAllDropdownItem: 'GetAllDropdownItem',\r\n      GetDropdownType: 'GetDropdownType',\r\n      GetDropdownitem: 'GetDropdownitem',\r\n    },\r\n  },\r\n  GHG: {\r\n    endpoint: 'GHG/',\r\n    methods: {\r\n      GetGHGItemsByDCFGroupId: 'GetGHGItemsByDCFGroupId',\r\n      GetGHGItemsByDCFGroupIdScope3: 'GetGHGItemsByDCFGroupIdScope3',\r\n      DeleteGHGItem: 'DeleteGHGItem',\r\n      DeleteGHGItemScope3: 'DeleteGHGItemScope3',\r\n      AddUpdateGHGItemsByDCFGroupId: 'AddUpdateGHGItemsByDCFGroupId',\r\n      AddUpdateGHGItemsByDCFGroupIdScope3:\r\n        'AddUpdateGHGItemsByDCFGroupIdScope3',\r\n      GetFactor: 'GetFactor',\r\n      CalculateEmissions: 'CalculateEmissions',\r\n      GetUnitByDropdownItemID: 'GetUnitByDropdownItemID',\r\n      CountOfGHGPendingApproval: 'CountOfGHGPendingApproval',\r\n      AddSupplierlist: 'AddSupplierlist',\r\n      GetAllSupplierList: 'GetAllSupplierList',\r\n      GetAllGHGEmissionEmplyoee: 'GetAllGHGEmissionEmplyoee',\r\n      GetAllSubDropdownItems: 'GetAllSubDropdownItems',\r\n      GetAllGhgemissionSource: 'GetAllGhgemissionSource',\r\n      GetAllGHGEmissionSoldProduct: 'GetAllGHGEmissionSoldProduct',\r\n      GetAllGHGEmissionFranchise: 'GetAllGHGEmissionFranchise',\r\n      GetAllGHGEmissionInvestmentPortfolio:\r\n        'GetAllGHGEmissionInvestmentPortfolio',\r\n      UploadEmployeeExcelData: 'UploadEmployeeExcelData',\r\n      ExtactExcelDataForSoldProduct: 'ExtactExcelDataForSoldProduct',\r\n      ExtactExcelForGHGEmissionInvestmentPortfolio:\r\n        'ExtactExcelForGHGEmissionInvestmentPortfolio',\r\n      ExtactExcelForGHGEmissionFrenchise: 'ExtactExcelForGHGEmissionFrenchise',\r\n      ExtactExcelForGhgemissionLeasedAsset:\r\n        'ExtactExcelForGhgemissionLeasedAsset',\r\n      DownloadEmployeeExcelTemplate: 'DownloadEmployeeExcelTemplate',\r\n      DownloadSoldProductExcelTemplate: 'DownloadSoldProductExcelTemplate',\r\n      DownloadInvestmentPortfolioExcelTemplate:\r\n        'DownloadInvestmentPortfolioExcelTemplate',\r\n      DownloadFrenchiseExcelTemplate: 'DownloadFrenchiseExcelTemplate',\r\n      DownloadLeasedAssetExcelTemplate: 'DownloadLeasedAssetExcelTemplate',\r\n      AddGHGEmissionSoldProduct: 'AddGHGEmissionSoldProduct',\r\n      AddGHGEmissionInvestmentPortfolio: 'AddGHGEmissionInvestmentPortfolio',\r\n      AddGHGEmissionFrenchise: 'AddGHGEmissionFrenchise',\r\n      AddGhgemissionLeasedAsset: 'AddGhgemissionLeasedAsset',\r\n      GetAllGHGEmissionLeasedAsset: 'GetAllGHGEmissionLeasedAsset',\r\n      GetAllGHGEmissionWorkArrangement: 'GetAllGHGEmissionWorkArrangement',\r\n      GetMajorContributorInGHGEmission: 'GetMajorContributorInGHGEmission',\r\n      DownloadtExcelTemplateCategory1and2:\r\n        'DownloadtExcelTemplateCategory1and2',\r\n      DownloadtExcelTemplateCategory6: 'DownloadtExcelTemplateCategory6',\r\n      DownloadtExcelTemplateCategory7: 'DownloadtExcelTemplateCategory7',\r\n      UploadExcelForGHGEmissionCatgeory1and2:\r\n        'UploadExcelForGHGEmissionCatgeory1and2',\r\n      UploadExcelForGHGEmissionCatgeory6: 'UploadExcelForGHGEmissionCatgeory6',\r\n      UploadExcelForGHGEmissionCatgeory7: 'UploadExcelForGHGEmissionCatgeory7',\r\n      GHGEmissionDataBatchHistoryByBatchId:\r\n        'GHGEmissionDataBatchHistoryByBatchId',\r\n    },\r\n  },\r\n  GHGAvoidance: {\r\n    endpoint: 'GHGAvoidance/',\r\n    methods: {\r\n      GetAllGhgavoidanceCategory: 'GetAllGhgavoidanceCategory',\r\n      GetGhgavoidanceDropdowntype: 'GetGhgavoidanceDropdowntype',\r\n      GetAllGHGAvoidanceDisplacementConfig:\r\n        'GetAllGHGAvoidanceDisplacementConfig',\r\n      GetAllGHGAvoidanceFuel: 'GetAllGHGAvoidanceFuel',\r\n      GetAllGHGAvoidanceFuelType: 'GetAllGHGAvoidanceFuelType',\r\n      AddGHGAvoidanceDisplacementConfig: 'AddGHGAvoidanceDisplacementConfig',\r\n      GetGHGAvoidanceDisplacementConfigByGroupId:\r\n        'GetGHGAvoidanceDisplacementConfigByGroupId',\r\n      GetGHGItemsByDCFGroupId: 'GetGHGItemsByDCFGroupId',\r\n      DeleteGHGItem: 'DeleteGHGItem',\r\n      GHGAvoidanceUnit: 'GHGAvoidanceUnit',\r\n      AddUpdateGHGItemsByDCFGroupId: 'AddUpdateGHGItemsByDCFGroupId',\r\n      GetGhgAvoidanceCalculation: 'GetGhgAvoidanceCalculation',\r\n      GHGAvoidanceDataBatchHistoryByBatchId:\r\n        'GHGAvoidanceDataBatchHistoryByBatchId',\r\n    },\r\n  },\r\n  login: {\r\n    endpoint: 'Login/',\r\n    methods: {\r\n      userLogin: 'api/userlogin',\r\n      refreshToken: 'api/refresh-token',\r\n      logout: 'api/logout',\r\n      resetUserPassword: 'ResetUserPassword',\r\n      changePassword: 'ChangePassword',\r\n      SendOTP: 'SendOTP',\r\n      ValidateOtp: 'ValidateOtp',\r\n    },\r\n  },\r\n  Master: {\r\n    endpoint: 'API/Master/',\r\n    methods: {\r\n      GetAllCountryMaster: 'GetAllCountryMaster',\r\n      GetAllStateMaster: 'GetAllStateMaster',\r\n      GetStateByCountryId: 'GetStateByCountryId',\r\n      GetAllCityMaster: 'GetAllCityMaster',\r\n      GetCityByStateId: 'GetCityByStateId',\r\n      AddCityMaster: 'AddCityMaster',\r\n      GetAllGender: 'GetAllGender',\r\n      GetAllConfiguration: 'GetAllConfiguration',\r\n      GetAllCategoryMaster: 'GetAllCategoryMaster',\r\n      GetAllIndustryTypeMaster: 'GetAllIndustryTypeMaster',\r\n      GetAllModuleMaster: 'GetAllModuleMaster',\r\n      GetAllSubModuleMaster: 'GetAllSubModuleMaster',\r\n      GetAllUnitTypeMaster: 'GetAllUnitTypeMaster',\r\n      GetAllUnitMaster: 'GetAllUnitMaster',\r\n      GetAllUserTypeMaster: 'GetAllUserTypeMaster',\r\n      GetAllDataCapturingFrequency: 'GetAllDataCapturingFrequency',\r\n      GetReportingFrequencyMaster: 'GetReportingFrequencyMaster',\r\n      GetAllProjectType: 'GetAllProjectType',\r\n      GetAllLocation: 'GetAllLocation',\r\n      GetDataCapturingSlotGroup: 'GetDataCapturingSlotGroup',\r\n      GetSubModuleByModuleId: 'GetSubModuleByModuleId',\r\n      GetCategoryByModuleAndSubModule: 'GetCategoryByModuleAndSubModule',\r\n      GetAllModuleSubModuleMaster: 'GetAllModuleSubModuleMaster',\r\n      GetDomain: 'GetDomain',\r\n    },\r\n  },\r\n  RegionalOfficeMaster: {\r\n    endpoint: 'RegionalOfficeMaster/',\r\n    methods: {\r\n      GetAllRegionalOfficeMaster: 'GetAllRegionalOfficeMaster',\r\n      GetRegionalOfficeMasterById: 'GetRegionalOfficeMasterById',\r\n      GetAllRegionalOfficeMasterByUserId: 'GetAllRegionalOfficeMasterByUserId',\r\n      AddRegionalOfficeMaster: 'AddRegionalOfficeMaster',\r\n      UpdateRegionalOfficeMaster: 'UpdateRegionalOfficeMaster',\r\n      DeleteRegionalOfficeMasterById: 'DeleteRegionalOfficeMasterById',\r\n      GetRegionalOfficeDropdown: 'GetRegionalOfficeDropdown',\r\n    },\r\n  },\r\n  SiteOfficeMaster: {\r\n    endpoint: 'SiteOfficeMaster/',\r\n    methods: {\r\n      GetAllSiteOfficeMaster: 'GetAllSiteOfficeMaster',\r\n      GetSiteOfficeMasterById: 'GetSiteOfficeMasterById',\r\n      GetAllSiteOfficeMasterByRegionalOfficeId:\r\n        'GetAllSiteOfficeMasterByRegionalOfficeId',\r\n      AddSiteOfficeMaster: 'AddSiteOfficeMaster',\r\n      UpdateSiteOfficeMaster: 'UpdateSiteOfficeMaster',\r\n      DeleteSiteOfficeMasterById: 'DeleteSiteOfficeMasterById',\r\n      GetSiteOfficeForDropdown: 'GetSiteOfficeForDropdown',\r\n    },\r\n  },\r\n  Supplier: {\r\n    endpoint: 'API/Supplier/',\r\n    methods: {\r\n      GetAllSupplierTypeMaster: 'GetAllSupplierTypeMaster',\r\n      AddSupplierTypeMaster: 'AddSupplierTypeMaster',\r\n      UpdateSupplierTypeMaster: 'UpdateSupplierTypeMaster',\r\n      GetAllSupplierApplicationStatusMaster:\r\n        'GetAllSupplierApplicationStatusMaster',\r\n      GetAllSupplierQuestionCategoryMaster:\r\n        'GetAllSupplierQuestionCategoryMaster',\r\n      AddSupplierQuestionCategoryMaster: 'AddSupplierQuestionCategoryMaster',\r\n      UpdateSupplierQuestionCategoryMaster:\r\n        'UpdateSupplierQuestionCategoryMaster',\r\n      GetAllSupplierList: 'GetAllSupplierList',\r\n      GetSupplierListById: 'GetSupplierListById',\r\n      AddSupplierlist: 'AddSupplierlist',\r\n      UpdateSupplierlist: 'UpdateSupplierlist',\r\n      GetAllSupplierQuestionMaster: 'GetAllSupplierQuestionMaster',\r\n      GetDashboardRiskExposure: 'GetDashboardRiskExposure',\r\n      UpdateSupplierQuestionAnswer: 'UpdateSupplierQuestionAnswer',\r\n      GetSupplierAllQuestionTxn: 'GetSupplierAllQuestionTxn',\r\n      UpdateSupplierApplicationStatus: 'UpdateSupplierApplicationStatus',\r\n      IsAnExistingContact: 'IsAnExistingContact',\r\n      IsAnExistingEmail: 'IsAnExistingEmail',\r\n    },\r\n  },\r\n  User: {\r\n    endpoint: 'User/',\r\n    methods: {\r\n      GetAllUserMaster: 'GetAllUserMaster',\r\n      AddUserDetail: 'AddUserDetail',\r\n      UpdateUserDetail: 'UpdateUserDetail',\r\n      ActiveDeactive: 'ActiveDeactive',\r\n    },\r\n  },\r\n  UserAccessManagement: {\r\n    endpoint: 'UserAccessManagement/',\r\n    methods: {\r\n      GetUserAccessManagementList: 'GetUserAccessManagementList',\r\n      AddUserAccessModuleById: 'AddUserAccessModuleById',\r\n      AddUserDetail: 'AddUserDetail',\r\n      UpdateUserDetail: 'UpdateUserDetail',\r\n      ActiveDeactive: 'ActiveDeactive',\r\n      AddUserAccessModule: 'AddUserAccessModule',\r\n      GetUserAccessModuleDetailsByUserId: 'GetUserAccessModuleDetailsByUserId',\r\n    },\r\n  },\r\n  WeatherForecast: {\r\n    endpoint: `WeatherForecast`,\r\n  },\r\n  PBIReport: {\r\n    endpoint: 'PBIReport/',\r\n    methods: {\r\n      GetEmbedReport: 'GetEmbedReport',\r\n    },\r\n  },\r\n};\r\n","export class commonData {\r\n  pageSize = 10;\r\n  currentPage = 1;\r\n}\r\n\r\nexport class HardcodedValue {\r\n  ghgAvoidanceSubModuleID = 7;\r\n  ghgAvoidanceModuleId = 2;\r\n  ghgAvoidanceCategoryId = 1;\r\n}\r\n\r\nexport class GhgEmissionScopeHardCodedValue {\r\n  scope3Cat1: number = 13;\r\n  scope3Cat2: number = 14;\r\n  scope3Cat3: number = 15;\r\n  scope3Cat4: number = 16;\r\n  scope3Cat5: number = 17;\r\n  scope3Cat6: number = 18;\r\n  scope3Cat7: number = 19;\r\n  scope3Cat8: number = 20;\r\n  scope3Cat9: number = 21;\r\n  scope3Cat10: number = 22;\r\n  scope3Cat11: number = 23;\r\n  scope3Cat12: number = 24;\r\n  scope3Cat13: number = 25;\r\n  scope3Cat14: number = 26;\r\n  scope3Cat15: number = 27;\r\n}\r\n\r\nexport class ghgEmissionAvoidanceSaveSubmitButtonId {\r\n  draftButtonId = 1;\r\n  submitButtonId = 2;\r\n  approvedButtonId = 3;\r\n  rejectButtonId = 4;\r\n}\r\n\r\nexport class ghgEmissionAvoidanceActionType {\r\n  addAction = 1;\r\n  editAction = 2;\r\n  deleteAction = 3;\r\n}\r\n","<div class=\"container-fluid\" style=\"height: 100%\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 py-2-vw modelHeader d-flex justify-content-between\">\r\n      <div class=\"px-2-vw\">\r\n        <p class=\"blueColoredText fw-600 fs-16-vw mb-3-vw\">\r\n          <ng-container *ngIf=\"modelData?.button?.isDelete\">\r\n            <img src=\"../../../../assets/images/delete_icon4.png\" alt=\"\" />\r\n            &nbsp; </ng-container\r\n          >{{ modelData.header }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12 px-4-vw\">\r\n      <p class=\"fw-500 blueColoredText fs-13-vw mb-3-vw\">\r\n        {{ modelData.data?.bodyData }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <mat-dialog-actions align=\"end\" class=\"mb-1-vw\"> -->\r\n  <div class=\"col-12 d-flex justify-content-end align-items-end mb-1-vw\">\r\n    <button\r\n      *ngIf=\"\r\n        !modelData?.button?.isDiscard &&\r\n        !modelData?.button?.hideAllButtonsLeftSubmit\r\n      \"\r\n      type=\"button\"\r\n      id=\"cancelModalButton\"\r\n      class=\"btn me-3-vw fs-16-vw\"\r\n      (click)=\"closeModel('close')\"\r\n    >\r\n      Cancel\r\n    </button>\r\n    <button\r\n      *ngIf=\"\r\n        modelData?.button?.isDiscard &&\r\n        !modelData?.button?.hideAllButtonsLeftSubmit\r\n      \"\r\n      type=\"button\"\r\n      id=\"cancelModalButton\"\r\n      class=\"btn me-3-vw fs-16-vw\"\r\n      (click)=\"closeModel('close')\"\r\n    >\r\n      Discard\r\n    </button>\r\n    <button\r\n      *ngIf=\"modelData?.button?.isSubmit\"\r\n      type=\"button\"\r\n      id=\"saveModalButton\"\r\n      class=\"btn fs-16-vw\"\r\n      (click)=\"closeModel('ok')\"\r\n    >\r\n      {{ submitbtnTxt }}\r\n    </button>\r\n    <button\r\n      *ngIf=\"\r\n        modelData?.button?.isDelete &&\r\n        !modelData?.button?.hideAllButtonsLeftSubmit\r\n      \"\r\n      type=\"button\"\r\n      id=\"saveModalButton\"\r\n      class=\"btn\"\r\n      (click)=\"closeModel('ok')\"\r\n    >\r\n      Delete\r\n    </button>\r\n  </div>\r\n  <!-- </mat-dialog-actions> -->\r\n</div>\r\n\r\n<!-- <label mat-dialog-title class=\"blueColoredText fw-600\" style=\"font-size: 16px\">\r\n  <ng-container *ngIf=\"modelData?.button?.isDelete\">\r\n    <img src=\"../../../../assets/images/delete_icon4.png\" alt=\"\" />\r\n    &nbsp; </ng-container\r\n  >{{ modelData.header }}\r\n</label>\r\n\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p class=\"blueColoredText\" style=\"font-size: 13px\">\r\n    {{ modelData.data?.bodyData }}\r\n  </p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <div\r\n    class=\"col-12 d-flex justify-content-end align-items-end\"\r\n    style=\"height: 50%\"\r\n  >\r\n    <button\r\n      type=\"button\"\r\n      id=\"cancelModalButton\"\r\n      class=\"btn me-3\"\r\n      (click)=\"closeModel('close')\"\r\n    >\r\n      Cancel\r\n    </button>\r\n    <button\r\n      *ngIf=\"modelData?.button?.isSubmit\"\r\n      type=\"button\"\r\n      id=\"saveModalButton\"\r\n      class=\"btn\"\r\n      (click)=\"closeModel('ok')\"\r\n    >\r\n      {{ submitbtnTxt }}\r\n    </button>\r\n    <button\r\n      *ngIf=\"modelData?.button?.isDelete\"\r\n      type=\"button\"\r\n      id=\"saveModalButton\"\r\n      class=\"btn\"\r\n      (click)=\"closeModel('ok')\"\r\n    >\r\n      Delete\r\n    </button>\r\n  </div>\r\n</mat-dialog-actions> -->\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.scss'],\r\n})\r\nexport class ConfirmationDialogComponent {\r\n  modelData!: any;\r\n  submitbtnTxt: String = 'Submit';\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>\r\n  ) {\r\n    console.log(data);\r\n    this.modelData = data;\r\n    if (data?.button?.submitbtnText) {\r\n      this.submitbtnTxt = data?.button?.submitbtnText;\r\n    }\r\n  }\r\n\r\n  closeModel(responseType: string): void {\r\n    this.dialogRef.close(responseType);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { PopoverModule } from 'ngx-bootstrap/popover';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\nimport { AlphaNumericDirective } from 'src/app/Directive/alpha-numeric.directive';\r\nimport { AlphabetOnlyDirective } from 'src/app/Directive/alphabet-only.directive';\r\nimport {\r\n  HardcodedValue,\r\n  commonData,\r\n  GhgEmissionScopeHardCodedValue,\r\n  ghgEmissionAvoidanceSaveSubmitButtonId,\r\n  ghgEmissionAvoidanceActionType,\r\n} from './commonData';\r\nimport { AlphabetNumericWithSpecialCharacterDirective } from 'src/app/Directive/alphabet-numeric-with-special-character.directive';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { OnlyNumericDirective } from 'src/app/Directive/only-numeric.directive';\r\nimport { PowerBIEmbedModule } from 'powerbi-client-angular';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSelectSearchModule } from 'mat-select-search';\r\n\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatSelectSearchModule,\r\n    ModalModule.forRoot(),\r\n    NgxSpinnerModule,\r\n    ToastrModule.forRoot({ preventDuplicates: true }),\r\n    SweetAlert2Module.forRoot(),\r\n    CalendarModule,\r\n    PopoverModule.forRoot(),\r\n    TreeSelectModule,\r\n    DropdownModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    NgxPaginationModule,\r\n    SidebarModule,\r\n    OverlayPanelModule,\r\n    PowerBIEmbedModule,\r\n  ],\r\n  exports: [\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectSearchModule,\r\n    NgMultiSelectDropDownModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    ModalModule,\r\n    NgxSpinnerModule,\r\n    ToastrModule,\r\n    SweetAlert2Module,\r\n    CalendarModule,\r\n    PopoverModule,\r\n    TreeSelectModule,\r\n    DropdownModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    ConfirmationDialogComponent,\r\n    AlphabetOnlyDirective,\r\n    AlphaNumericDirective,\r\n    AlphabetNumericWithSpecialCharacterDirective,\r\n    NgxPaginationModule,\r\n    SidebarModule,\r\n    OverlayPanelModule,\r\n    OnlyNumericDirective,\r\n    PowerBIEmbedModule,\r\n  ],\r\n  declarations: [\r\n    ConfirmationDialogComponent,\r\n    AlphabetOnlyDirective,\r\n    AlphaNumericDirective,\r\n    AlphabetNumericWithSpecialCharacterDirective,\r\n    OnlyNumericDirective,\r\n  ],\r\n  providers: [\r\n    AlphabetOnlyDirective,\r\n    AlphaNumericDirective,\r\n    commonData,\r\n    HardcodedValue,\r\n    GhgEmissionScopeHardCodedValue,\r\n    ghgEmissionAvoidanceSaveSubmitButtonId,\r\n    ghgEmissionAvoidanceActionType,\r\n    AlphabetNumericWithSpecialCharacterDirective,\r\n    OnlyNumericDirective,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport * as forge from 'node-forge';\r\nimport { URLS } from 'src/app/app-url.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommonService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public userLoggedIn = new Subject();\r\n  // publicKey: string = `-----BEGIN PUBLIC KEY-----\r\n  // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAskgPKBcNpz71mi4NSYa5\r\n  // mazJrO0WZim7T2yy7qPxk2NqQE7OmWWakLJcaeUYnI0kO3yC57vck66RPCjKxWuW1\r\n  // SGZ7dHXe0bWb5IXjcT4mNdnUIalR+lV8czsoH/wDUvkQdG1SJ+IxzW64WvoaCRZ+\r\n  // /4wBF2cSUh9oLwGEXiodUJ9oJXFZVPKGCEjPcBI0vC2ADBRmVQ1sKsZg8zbHN+gu\r\n  // U9rPLFzN4YNrCnEsSezVw/W1FKVS8J/Xx4HSSg7AyVwniz8eHi0e3a8VzFg+H09I\r\n  // 5wK+w39sjDYfAdnJUkr6PjtSbN4/Sg/NMkKB2Ngn8oj7LCfe/7RNqIdiS+dQuSFg\r\n  // eQIDAQAB\r\n  // -----END PUBLIC KEY-----`;\r\n\r\n  publicKey: string = `-----BEGIN PUBLIC KEY-----\r\n  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAskgPKBcNpz71mi4NSYa5\r\n  mazJrO0WZim7T2yy7qPxk2NqQE7OmWWakLJcaeUYnI0kO3yC57vck66RPCjKxWuW\r\n  SGZ7dHXe0bWb5IXjcT4mNdnUIalR+lV8czsoH/wDUvkQdG1SJ+IxzW64WvoaCRZ+\r\n  /4wBF2cSUh9oLwGEXiodUJ9oJXFZVPKGCEjPcBI0vC2ADBRmVQ1sKsZg8zbHN+gu\r\n  U9rPLFzN4YNrCnEsSezVw/W1FKVS8J/Xx4HSSg7AyVwniz8eHi0e3a8VzFg+H09I\r\n  5wK+w39sjDYfAdnJUkr6PjtSbN4/Sg/NMkKB2Ngn8oj7LCfe/7RNqIdiS+dQuSFg\r\n  eQIDAQAB\r\n  -----END PUBLIC KEY-----`;\r\n\r\n  public userMenu: any = JSON.parse(localStorage.getItem('validRoutes')!);\r\n  public static superAdminMenu: any[] = [\r\n    {\r\n      name: 'Organization Setup',\r\n      icon: '',\r\n      routerLink: '/setup',\r\n      userRole: ['SuperAdmin', 'Admin'],\r\n      isChild: ['office/create', 'office/edit'],\r\n      isVisible: true,\r\n    },\r\n    {\r\n      name: 'User Management',\r\n      icon: '',\r\n      routerLink: '/user-management',\r\n      userRole: ['SuperAdmin', 'Admin'],\r\n      isVisible: true,\r\n    },\r\n    {\r\n      name: 'Reminder Settings',\r\n      icon: '',\r\n      routerLink: '404',\r\n      userRole: ['SuperAdmin', 'Admin'],\r\n      // isVisible: true,\r\n      isVisible: false,\r\n    },\r\n    {\r\n      name: 'Access Management',\r\n      icon: '',\r\n      routerLink: '/access-management',\r\n      userRole: ['SuperAdmin', 'Admin'],\r\n      isVisible: true,\r\n    },\r\n    {\r\n      name: 'License Key',\r\n      icon: '',\r\n      routerLink: '404',\r\n      userRole: ['SuperAdmin', 'Admin'],\r\n      // isVisible: true,\r\n      isVisible: false,\r\n    },\r\n  ];\r\n\r\n  userLogin(formData: any) {\r\n    const requestBody = {\r\n      username: formData.username,\r\n      // password: formData.password,\r\n      password: this.encryptData(formData.password.trim()),\r\n    };\r\n    return this.http.post(\r\n      `${URLS.baseApiHostUrl}${URLS.login.endpoint}${URLS.login.methods.userLogin}`,\r\n      requestBody\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.login.endpoint}${URLS.login.methods.logout}`\r\n    );\r\n  }\r\n\r\n  getDomain() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetDomain}`\r\n    );\r\n  }\r\n\r\n  changePassword(requestBody: any) {\r\n    return this.http.post(\r\n      `${URLS.baseApiHostUrl}${URLS.login.endpoint}${URLS.login.methods.changePassword}`,\r\n      requestBody\r\n    );\r\n  }\r\n  sendOTP(requestBody: any) {\r\n    return this.http.post(\r\n      `${URLS.baseApiHostUrl}${URLS.login.endpoint}${URLS.login.methods.SendOTP}`,\r\n      requestBody\r\n    );\r\n  }\r\n  VerifyOTP(requestBody: any) {\r\n    return this.http.post(\r\n      `${URLS.baseApiHostUrl}${URLS.login.endpoint}${URLS.login.methods.ValidateOtp}`,\r\n      requestBody\r\n    );\r\n  }\r\n  GenerateRefreshToken() {\r\n    var token: any = JSON.parse(localStorage.getItem('userData')!);\r\n    const requestBody = {\r\n      email: token.username,\r\n      refreshToken: token.refreshToken,\r\n      accessToken: token.accessToken,\r\n    };\r\n    return this.http.post(\r\n      `${URLS.baseApiHostUrl}${URLS.login.endpoint}${URLS.login.methods.refreshToken}`,\r\n      requestBody\r\n    );\r\n  }\r\n\r\n  searchAddress(\r\n    city: string,\r\n    state: string,\r\n    country: string,\r\n    postalCode: string\r\n  ) {\r\n    let paramData: any = {};\r\n    if (city) paramData['city'] = city;\r\n    if (state) paramData['state'] = state;\r\n    if (country) paramData['country'] = country;\r\n    if (postalCode) paramData['postalcode'] = postalCode;\r\n    paramData['format'] = 'jsonv2';\r\n    paramData['addressdetails'] = 1;\r\n\r\n    return this.http.get(`${URLS.baseAddressUrl}${URLS.addressUrl.endpoint}`, {\r\n      params: paramData,\r\n    });\r\n  }\r\n\r\n  getCountryList() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetAllCountryMaster}`\r\n    );\r\n  }\r\n\r\n  getStateList(countryId: any) {\r\n    let param = {\r\n      CountryId: countryId,\r\n    };\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetStateByCountryId}`,\r\n      { params: param }\r\n    );\r\n  }\r\n\r\n  getAllCountryStateList() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetAllStateMaster}`\r\n    );\r\n  }\r\n\r\n  getCityList(stateId: any) {\r\n    let param = {\r\n      StateId: stateId,\r\n    };\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetCityByStateId}`,\r\n      { params: param }\r\n    );\r\n  }\r\n\r\n  getAllCountryStateCityList() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetAllCityMaster}`\r\n    );\r\n  }\r\n\r\n  getReqLoginUserName() {\r\n    if (localStorage.getItem('userData'))\r\n      return JSON.parse(localStorage.getItem('userData')!).username;\r\n  }\r\n\r\n  getRole() {\r\n    if (localStorage.getItem('userData'))\r\n      return JSON.parse(localStorage.getItem('userData')!).roleName;\r\n  }\r\n\r\n  isUserLoggedIn(): boolean {\r\n    ///return true if we have token in local storage\r\n    if (localStorage.getItem('authToken')) return true;\r\n    else return false;\r\n  }\r\n  /////to encrypt data\r\n  encryptData(data: any) {\r\n    var rsa: any = forge.pki.publicKeyFromPem(this.publicKey);\r\n    return window.btoa(rsa.encrypt(data));\r\n  }\r\n\r\n  // isvalidroutes(route: any) {\r\n  //   if (this.sideMenuArray.length > 0) {\r\n  //     if (\r\n  //       this.sideMenuArray[\r\n  //         this.sideMenuArray.findIndex((menu: any) => {\r\n  //           if (menu.routerLink.includes('/'))\r\n  //             return (\r\n  //               menu?.routerLink == route?._routerState.url ||\r\n  //               menu?.isChild?.includes(route?._routerState.url)\r\n  //             );\r\n  //           else {\r\n  //             return (\r\n  //               menu?.routerLink == route?._routerState?.url?.split('/')[1] ||\r\n  //               menu?.isChild?.includes(route._routerState?.url?.split('/')[1])\r\n  //             );\r\n  //           }\r\n  //         })\r\n  //       ].isVisible\r\n  //     ) {\r\n  //       return true;\r\n  //     }\r\n  //     return false;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  indiaStateColor(state: string): string {\r\n    // Define colors for states, you can customize this\r\n    const colors: { [key: string]: string } = {\r\n      'Andaman and Nicobar': '#ff7f50',\r\n      'Andhra Pradesh': '#ff6434',\r\n      'Arunachal Pradesh': '#cd6667',\r\n      Assam: '#6d9869',\r\n      Bihar: '#6997ca',\r\n      Chandigarh: '#6799cd',\r\n      Chhattisgarh: '#ffcc01',\r\n      'Dadra and Nagar Haveli': '#da70d6',\r\n      'Daman and Diu': '#cc6667',\r\n      Delhi: '#cc6667',\r\n      Goa: '#da70d6',\r\n      Gujarat: '#cc6667',\r\n      Haryana: '#6a986b',\r\n      'Himachal Pradesh': '#f76a2f',\r\n      'Jammu and Kashmir': '#ffcc01',\r\n      Jharkhand: '#015e89',\r\n      Karnataka: '#679966',\r\n      Kerala: '#d06467',\r\n      Lakshadweep: '#015e89',\r\n      'Madhya Pradesh': '#66669a',\r\n      Maharashtra: '#ffcc9a',\r\n      Manipur: '#ce6764',\r\n      Meghalaya: '#015e89',\r\n      Mizoram: '#feca32',\r\n      Nagaland: '#6799cd',\r\n      Orissa: '#cc6667',\r\n      Puducherry: '#015e89',\r\n      Punjab: '#6899cb',\r\n      Rajasthan: '#ffcc01',\r\n      Sikkim: '#ce6764',\r\n      'Tamil Nadu': '#ffcc01',\r\n      Tripura: '#66669a',\r\n      'Uttar Pradesh': '#cc6667',\r\n      Uttaranchal: '#fccd00',\r\n      'West Bengal': '#ffca03',\r\n    };\r\n\r\n    return colors[state] || '#ffffff';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  constructor(private toast: ToastrService) {}\r\n\r\n  successToast(message: string) {\r\n    this.toast.success(message);\r\n  }\r\n\r\n  errorToast(message: string) {\r\n    this.toast.error(message);\r\n  }\r\n\r\n  showAlert() {\r\n    Swal.fire('Hello, world!');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { URLS } from '../app-url.constant';\r\nimport { CommonService } from './common/common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserAccessManagementService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private commSvc: CommonService\r\n  ) {}\r\n\r\n  getCorporateOfficeList() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.CorporateOfficeMaster.endpoint}${URLS.CorporateOfficeMaster.methods.GetCorporateOfficeDropdown}`\r\n    );\r\n  }\r\n\r\n  getReginalOfficeList(corporateOfficeId: number) {\r\n    const requestBody = {\r\n      requestUserLoginName: this.commSvc.getReqLoginUserName(),\r\n      requestId: '',\r\n      data: {\r\n        croporateOfficeId: corporateOfficeId,\r\n      },\r\n    };\r\n    return this.http.post(\r\n      `${URLS.baseApiHostUrl}${URLS.RegionalOfficeMaster.endpoint}${URLS.RegionalOfficeMaster.methods.GetRegionalOfficeDropdown}`,\r\n      requestBody\r\n    );\r\n  }\r\n\r\n  getSiteOfficeList(siteOfficeId: number) {\r\n    const requestBody = {\r\n      requestUserLoginName: this.commSvc.getReqLoginUserName(),\r\n      requestId: '',\r\n      data: {\r\n        regionalOfficeId: siteOfficeId,\r\n      },\r\n    };\r\n    return this.http.post(\r\n      `${URLS.baseApiHostUrl}${URLS.SiteOfficeMaster.endpoint}${URLS.SiteOfficeMaster.methods.GetSiteOfficeForDropdown}`,\r\n      requestBody\r\n    );\r\n  }\r\n\r\n  getUsersAccessManagementList() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.UserAccessManagement.endpoint}${URLS.UserAccessManagement.methods.GetUserAccessManagementList}`\r\n    );\r\n  }\r\n\r\n  getModuleList() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetAllModuleMaster}`\r\n    );\r\n  }\r\n\r\n  getSubModuleList() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetAllSubModuleMaster}`\r\n    );\r\n  }\r\n\r\n  getModuleSubModuleList() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.Master.endpoint}${URLS.Master.methods.GetAllModuleSubModuleMaster}`\r\n    );\r\n  }\r\n\r\n  getUserModuleAccessList(id: any) {\r\n    let param = {\r\n      Id: id,\r\n    };\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.UserAccessManagement.endpoint}${URLS.UserAccessManagement.methods.AddUserAccessModuleById}`,\r\n      { params: param }\r\n    );\r\n  }\r\n\r\n  addUserAccessModule(requestBody: any, userId: any, type: any) {\r\n    let param = {\r\n      Id: userId,\r\n      type: type,\r\n    };\r\n    return this.http.post(\r\n      `${URLS.baseApiHostUrl}${URLS.UserAccessManagement.endpoint}${URLS.UserAccessManagement.methods.AddUserAccessModule}`,\r\n      requestBody,\r\n      { params: param }\r\n    );\r\n  }\r\n\r\n  getUserAccessModules() {\r\n    return this.http.get(\r\n      `${URLS.baseApiHostUrl}${URLS.UserAccessManagement.endpoint}${URLS.UserAccessManagement.methods.GetUserAccessModuleDetailsByUserId}`\r\n    );\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  addressHostName: 'https://nominatim.openstreetmap.org',\r\n  apiHostName: 'https://esgsync-api-dev.azurewebsites.net',\r\n  // apiHostName: 'https://ksc8bzrz-7261.inc1.devtunnels.ms',\r\n  // apiHostName: 'https://esgsyncuat-api.azurewebsites.net',\r\n  //apiHostName:'https://localhost:7261'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BehaviorSubjectCollectionService {\r\n  public isUserLogin: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  constructor() {}\r\n}\r\n","<div class=\"container-fluid loginComponent\">\r\n  <div class=\"row d-flex justify-content-center\" id=\"mainRow\">\r\n    <div class=\"col-lg-7 px-0\" id=\"carouselDiv\">\r\n      <div\r\n        id=\"carouselExampleControls\"\r\n        class=\"carousel slide\"\r\n        data-bs-ride=\"carousel\"\r\n        data-bs-pause=\"false\"\r\n        data-bs-interval=\"4000\"\r\n      >\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <img\r\n              src=\"../../../../assets/images/image1.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img\r\n              src=\"../../../../assets/images/image2.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img\r\n              src=\"../../../../assets/images/image3.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <carousel class=\"carouselMainDiv\" [interval]=\"myInterval\" [showIndicators]=\"false\" [(activeSlide)]=\"activeSlideIndex\" [indicatorsByChunk]=\"false\" >\r\n        <slide *ngFor=\"let slide of slides; let index=index\">\r\n          <img [src]=\"slide.image\" alt=\"image slide\" style=\"display: block; height:100% !important; width: 100%;\">\r\n        </slide>\r\n      </carousel> -->\r\n    </div>\r\n    <div class=\"col-md-4 col-lg-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 text-center mb-4-vw\" style=\"margin-top: 10%\">\r\n          <img src=\"../../../../assets/images/login_logo.png\" width=\"40%\" />\r\n        </div>\r\n        <div\r\n          *ngIf=\"isResetPasswordEnable\"\r\n          class=\"col-12 d-flex justify-content-center\"\r\n        >\r\n          <div class=\"loginFornt fs-20-vw\" style=\"font-weight: bold\">\r\n            Reset Password\r\n          </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8 mt-5-vw\" *ngIf=\"!isResetPasswordEnable\">\r\n          <form autocomplete=\"off\" [formGroup]=\"loginForm\">\r\n            <label for=\"username\" class=\"loginFornt fs-16-vw\">UserID</label\r\n            ><br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              class=\"w-100 form-control shadow-none fs-14-vw\"\r\n              formControlName=\"username\"\r\n              placeholder=\"Enter username\"\r\n              [ngClass]=\"{\r\n                errorField:\r\n                  loginForm.get('username')?.invalid &&\r\n                  loginForm.get('username')?.touched\r\n              }\"\r\n            /><br />\r\n            <label for=\"pwd\" class=\"loginFornt fs-16-vw\">Password</label><br />\r\n            <div\r\n              class=\"w-100 passwordDiv fs-14-vw\"\r\n              [ngClass]=\"{\r\n                errorField:\r\n                  loginForm.get('password')?.invalid &&\r\n                  loginForm.get('password')?.touched\r\n              }\"\r\n            >\r\n              <input\r\n                [type]=\"!showPassword ? 'password' : 'text'\"\r\n                id=\"pwd\"\r\n                name=\"pwd\"\r\n                class=\"border-0 form-control shadow-none\"\r\n                placeholder=\"Enter Password\"\r\n                formControlName=\"password\"\r\n              />\r\n              <img\r\n                id=\"passwordIconPic\"\r\n                *ngIf=\"!showPassword\"\r\n                src=\"../../../../assets/images/eye_close_icon.png\"\r\n                (click)=\"showPassword = true\"\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                id=\"passwordIconPic\"\r\n                *ngIf=\"showPassword\"\r\n                src=\"../../../../assets/images/eye_icon.png\"\r\n                (click)=\"showPassword = false\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n\r\n            <br />\r\n            <!-- <re-captcha\r\n              (resolved)=\"resolved($event)\"\r\n              formControlName=\"captcha\"\r\n              siteKey=\"{{ siteKey }}\"\r\n            >\r\n            </re-captcha> -->\r\n\r\n            <div class=\"d-flex\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Captcha\"\r\n                  formControlName=\"captcha\"\r\n                  class=\"form-control shadow-none fs-14-vw\"\r\n                  style=\"\r\n                    border-top-right-radius: 0px;\r\n                    border-bottom-right-radius: 0px;\r\n                  \"\r\n                  [ngClass]=\"{\r\n                    errorField:\r\n                      loginForm.get('captcha')?.invalid &&\r\n                      loginForm.get('captcha')?.touched\r\n                  }\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"mt-2-vw\">\r\n                <span\r\n                  class=\"prefix\"\r\n                  style=\"position: relative; margin-left: -2.222vw\"\r\n                  (click)=\"generateCaptcha()\"\r\n                >\r\n                  <img\r\n                    style=\"width: 1.389vw; height: 1.389vw; cursor: pointer\"\r\n                    src=\"../../../../assets/images/refresh-red.png\"\r\n                    alt=\"\"\r\n                /></span>\r\n              </div>\r\n\r\n              <div>\r\n                <canvas\r\n                  #myCanvas\r\n                  id=\"myCanvas\"\r\n                  width=\"110\"\r\n                  style=\"\r\n                    border: 1px solid #d3d3d3;\r\n                    border-bottom-right-radius: 0.694vw;\r\n                    background: #01444b;\r\n                    border-top-right-radius: 0.694vw;\r\n                    height: 2.5vw !important;\r\n                    width: 7.639vw !important;\r\n                  \"\r\n                >\r\n                </canvas>\r\n              </div>\r\n            </div>\r\n\r\n            <br />\r\n            <label\r\n              class=\"loginFornt fs-16-vw\"\r\n              style=\"float: right; margin-top: 1%\"\r\n              [routerLink]=\"['/forgetpassword']\"\r\n              >Forgot Password ?</label\r\n            >\r\n            <br />\r\n            <button\r\n              class=\"btn w-100 mt-3-vw loginButton shadow-none fs-16-vw\"\r\n              type=\"submit\"\r\n              (click)=\"login()\"\r\n            >\r\n              Login\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-8 mt-5-vw\" *ngIf=\"isResetPasswordEnable\">\r\n          <form [formGroup]=\"changePasswordForm\">\r\n            <label for=\"username\" class=\"loginFornt fs-16-vw\"\r\n              >Current Password</label\r\n            ><br />\r\n            <input\r\n              type=\"password\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              class=\"w-100 form-control shadow-none fs-14-vw\"\r\n              formControlName=\"currentPassword\"\r\n              placeholder=\"Enter username\"\r\n            />\r\n            <label for=\"pwd\" class=\"loginFornt mt-4-vw fs-16-vw\"\r\n              >New Password</label\r\n            ><br />\r\n            <div class=\"w-100 passwordDiv mb-4-vw\">\r\n              <input\r\n                [type]=\"!newPassword ? 'password' : 'text'\"\r\n                id=\"pwd\"\r\n                name=\"pwd\"\r\n                class=\"border-0 form-control shadow-none fs-14-vw\"\r\n                placeholder=\"Enter Password\"\r\n                formControlName=\"newPassword\"\r\n              />\r\n              <img\r\n                id=\"passwordIconPic\"\r\n                *ngIf=\"!newPassword\"\r\n                src=\"../../../../assets/images/eye_close_icon.png\"\r\n                (click)=\"newPassword = true\"\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                id=\"passwordIconPic\"\r\n                *ngIf=\"newPassword\"\r\n                src=\"../../../../assets/images/eye_icon.png\"\r\n                (click)=\"newPassword = false\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n\r\n            <label for=\"pwd2\" class=\"loginFornt fs-16-vw\"\r\n              >Confirm Password</label\r\n            ><br />\r\n            <div class=\"w-100 passwordDiv\">\r\n              <input\r\n                [type]=\"!confirmPassword ? 'password' : 'text'\"\r\n                id=\"pwd2\"\r\n                name=\"pwd2\"\r\n                class=\"border-0 form-control shadow-none fs-14-vw\"\r\n                placeholder=\"Enter Password\"\r\n                formControlName=\"confirmPassword\"\r\n              />\r\n              <img\r\n                id=\"passwordIconPic\"\r\n                *ngIf=\"!confirmPassword\"\r\n                src=\"../../../../assets/images/eye_close_icon.png\"\r\n                (click)=\"confirmPassword = true\"\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                id=\"passwordIconPic\"\r\n                *ngIf=\"confirmPassword\"\r\n                src=\"../../../../assets/images/eye_icon.png\"\r\n                (click)=\"confirmPassword = false\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <br />\r\n            <button\r\n              class=\"btn w-100 mt-3-vw loginButton shadow-none fs-16-vw\"\r\n              type=\"submit\"\r\n              (click)=\"passwordChange()\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { BehaviorSubjectCollectionService } from 'src/app/services/behaviorSubjectCollection.service';\r\nimport { CommonService } from 'src/app/services/common/common.service';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { ConfirmationDialogComponent } from '../../shared/confirmation-dialog/confirmation-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\ndeclare const bootstrap: any;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements AfterViewInit {\r\n  @ViewChild('myCanvas') myCanvas: any;\r\n  loginForm: FormGroup;\r\n  changePasswordForm!: FormGroup;\r\n  showPassword!: boolean;\r\n  newPassword!: boolean;\r\n  confirmPassword!: boolean;\r\n  isResetPasswordEnable: boolean = false;\r\n  loginResponse: any;\r\n  userName: any;\r\n  StrongPasswordRegx: RegExp =\r\n    /^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\D*\\d).{8,}$/;\r\n  validRoute: any[] = [];\r\n  siteKey: string = `6LcUmtcpAAAAAK19t_v-CJaRVrtTZ6slKlsB3Akr`;\r\n  captcha: string = '';\r\n\r\n  myInterval = 13000;\r\n  activeSlideIndex = 0;\r\n  slides: { image: string; text?: string }[] = [\r\n    { image: 'assets/images/image1.png' },\r\n    { image: 'assets/images/image2.png' },\r\n    { image: 'assets/images/image3.png' },\r\n  ];\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private router: Router,\r\n    private commonService: CommonService,\r\n    private behaviorSubjectCollection: BehaviorSubjectCollectionService,\r\n    private spinner: NgxSpinnerService,\r\n    private messageService: MessageService,\r\n    private _dialog: MatDialog\r\n  ) {\r\n    this.loginForm = this._fb.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n      captcha: ['', Validators.required],\r\n    });\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.startCarouselManual();\r\n    this.generateCaptcha();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.removeLocalStorageData();\r\n    this.changeFormInitialize();\r\n    setTimeout(() => {}, 4000);\r\n  }\r\n\r\n  startCarouselManual() {\r\n    setTimeout(() => {\r\n      var myCarousel = document.querySelector('#carouselExampleControls');\r\n      var carousel = new bootstrap.Carousel(myCarousel, {\r\n        interval: 4000,\r\n        wrap: true,\r\n        touch: false,\r\n        keyboard: false,\r\n      });\r\n    }, 0);\r\n  }\r\n\r\n  generateCaptcha() {\r\n    const viewportWidth = window.innerWidth;\r\n    const canvasHeightVW = '2.5vw'; // Replace with your desired height in vw\r\n    const canvasHeight =\r\n      (parseFloat(canvasHeightVW.slice(0, -2)) * viewportWidth) / 100;\r\n    this.captcha = '';\r\n    this.loginForm.controls['captcha'].reset();\r\n    var chars: any =\r\n      '0123456789ABCDEFGHJKLMNOPQRSTUVWXTZabcdefghikmnopqrstuvwxyz'.split('');\r\n    var length: any = 6;\r\n\r\n    if (!length) {\r\n      length = Math.floor(Math.random() * chars.length);\r\n    }\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      this.captcha += chars[Math.floor(Math.random() * chars.length)];\r\n    }\r\n    var c: any = document?.getElementById('myCanvas');\r\n    var ctx = c.getContext('2d');\r\n    ctx.canvas.height = canvasHeight - 2;\r\n\r\n    ctx.clearRect(0, 0, 200, 200);\r\n    ctx.moveTo(0, 17);\r\n    ctx.fillStyle = '#FFFFFF';\r\n    ctx.lineTo(200, 17);\r\n    ctx.strokeStyle = '#FFFFFF';\r\n    ctx.stroke();\r\n    ctx.font = '23px Arial';\r\n\r\n    ctx.fillText(this.captcha, 10, 24);\r\n  }\r\n\r\n  changeFormInitialize() {\r\n    this.changePasswordForm = this._fb.group({\r\n      currentPassword: ['', Validators.required],\r\n      newPassword: [\r\n        '',\r\n        [Validators.required, Validators.pattern(this.StrongPasswordRegx)],\r\n      ],\r\n      confirmPassword: [\r\n        '',\r\n        [Validators.required, Validators.pattern(this.StrongPasswordRegx)],\r\n      ],\r\n    });\r\n  }\r\n\r\n  removeLocalStorageData() {\r\n    localStorage.removeItem('userData');\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('imageUrl');\r\n    localStorage.removeItem('validRoutes');\r\n  }\r\n\r\n  login() {\r\n    if (!this.loginForm?.valid) {\r\n      this.loginForm.markAllAsTouched();\r\n      return this.messageService.errorToast('Please fill required details.');\r\n    } else {\r\n      if (this.loginForm.value.captcha === this.captcha) {\r\n        this.spinner.show();\r\n        this.commonService.userLogin(this.loginForm.value).subscribe(\r\n          (response: any) => {\r\n            this.userName = response.data.username;\r\n            this.loginResponse = response.data;\r\n            if (response.data.isPasswordChanged) {\r\n              localStorage.setItem('userData', JSON.stringify(response.data));\r\n              localStorage.setItem('authToken', response.data.accessToken);\r\n              this.commonService.userLoggedIn.next(true); // to tell the app component that user logged in so that we can start the count()\r\n            }\r\n\r\n            this.validRoute = response.data.userAccessModule;\r\n            const sidebarMenu = [\r\n              {\r\n                name: 'Dashboard',\r\n                icon: '../../../../assets/images/dashboard_icon.png',\r\n                routerLink: '/dashboard',\r\n                userRole: ['user'],\r\n                isVisible: true,\r\n              },\r\n              {\r\n                name: 'GHG Emission',\r\n                icon: '../../../../assets/images/GHG_emission_icon.png',\r\n                routerLink: 'location_selection',\r\n                userRole: ['user'],\r\n                isChild: ['GHG_Emission'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'GHG Emission'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'GHG Emission'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n              {\r\n                name: 'GHG Avoidance/ Carbon Offsetting',\r\n                icon: '../../../../assets/images/carbon_offsetting_icon.png',\r\n                routerLink: '/location-selection-Avoidance',\r\n                userRole: ['user'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'GHG Avoidance/ Carbon Offsetting'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'GHG Avoidance/ Carbon Offsetting'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n                // isVisible: true,\r\n              },\r\n              {\r\n                name: 'Supplier Assessment Suite',\r\n                icon: '../../../../assets/images/supplier_assessment_icon.png',\r\n                routerLink: '/supplier_assessment',\r\n                userRole: ['user'],\r\n                isChild: ['/add_supplier', 'edit_supplier/:id'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'Supplier Assessment Suite'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'Supplier Assessment Suite'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n              {\r\n                name: 'Consulting Service',\r\n                icon: '../../../../assets/images/consulting_icon.png',\r\n                routerLink: '/dashboard2',\r\n                userRole: ['user'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'Consulting Service'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'Consulting Service'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n              {\r\n                name: 'Analysis & Reporting',\r\n                icon: '../../../../assets/images/analysis_icon.png',\r\n                routerLink: '/analysis-reporting',\r\n                userRole: ['user'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'Analysis & Reporting'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'Analysis & Reporting'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n              {\r\n                name: 'Coaching',\r\n                icon: '../../../../assets/images/coaching_icon.png',\r\n                routerLink: '/dashboard3',\r\n                userRole: ['user'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'Coaching'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'Coaching'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n              {\r\n                name: 'ESG Management System Builder',\r\n                icon: '../../../../assets/images/ESG_management_icon.png',\r\n                routerLink: '/dashboard4',\r\n                userRole: ['user'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'ESG Management System Builder'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'ESG Management System Builder'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n              {\r\n                name: 'Materiality Assessment',\r\n                icon: '../../../../assets/images/materiality_icon.png',\r\n                routerLink: '/dashboard5',\r\n                userRole: ['user'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'Materiality Assessment'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'Materiality Assessment'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n              {\r\n                name: 'ESG /Peer Benchmarking, Gap Analysis',\r\n                icon: '../../../../assets/images/ESG_peer_icon.png',\r\n                routerLink: '/dashboard6',\r\n                userRole: ['user'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName.toLowerCase() ==\r\n                        'ESG /Peer Benchmarking, Gap Analysis'.toLowerCase()\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'ESG /Peer Benchmarking, Gap Analysis'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n              {\r\n                name: 'ESG Due Diligence/ Impact Investment Suite',\r\n                icon: '../../../../assets/images/ESG_due_icon.png',\r\n                routerLink: '/dashboard7',\r\n                userRole: ['user'],\r\n                isVisible: true\r\n                  ? this.validRoute.findIndex(\r\n                      (permission: any) =>\r\n                        permission.moduleName ==\r\n                        'ESG Due Diligence/ Impact Investment Suite'\r\n                    ) > -1 &&\r\n                    this.validRoute[\r\n                      this.validRoute.findIndex(\r\n                        (permission: any) =>\r\n                          permission.moduleName.toLowerCase() ==\r\n                          'ESG Due Diligence/ Impact Investment Suite'.toLowerCase()\r\n                      )\r\n                    ].isActive\r\n                  : false,\r\n              },\r\n            ];\r\n\r\n            this.commonService.userMenu = sidebarMenu;\r\n            // console.log(sidebarMenu);\r\n\r\n            localStorage.setItem('validRoutes', JSON.stringify(sidebarMenu));\r\n\r\n            if (!response.data.isPasswordChanged) {\r\n              this.isResetPasswordEnable = true;\r\n              this.captcha = '';\r\n              this.loginForm.reset();\r\n              this.generateCaptcha();\r\n            } else {\r\n              this.showPopupRegardingResolution();\r\n              this.isResetPasswordEnable = false;\r\n              this.commonService.userLoggedIn.next(true);\r\n              if (\r\n                response.data.roleName == 'SuperAdmin' ||\r\n                response.data.roleName == 'Admin'\r\n              )\r\n                this.router.navigate(['setup']);\r\n              else this.router.navigate(['dashboard']);\r\n            }\r\n\r\n            this.loginForm.reset();\r\n            this.spinner.hide();\r\n          },\r\n          (err: any) => {\r\n            this.loginForm.reset();\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n      } else {\r\n        this.messageService.errorToast('Please Enter Valid Captcha');\r\n      }\r\n    }\r\n  }\r\n\r\n  passwordChange() {\r\n    if (this.changePasswordForm.invalid) {\r\n      if (\r\n        this.changePasswordForm.controls['currentPassword'].hasError(\r\n          'required'\r\n        ) ||\r\n        this.changePasswordForm.controls['newPassword'].hasError('required') ||\r\n        this.changePasswordForm.controls['confirmPassword'].hasError('required')\r\n      ) {\r\n        this.messageService.errorToast('Please Fill all the fields');\r\n        return;\r\n      } else if (\r\n        this.changePasswordForm.controls['newPassword'].hasError('pattern') ||\r\n        this.changePasswordForm.controls['confirmPassword'].hasError('pattern')\r\n      ) {\r\n        this.messageService.errorToast(\r\n          'Password should be of min 8 digits contains Alphanumeric, Special Character and Uppercase and Lowercase characters'\r\n        );\r\n        return;\r\n      }\r\n    } else {\r\n      if (\r\n        this.changePasswordForm.value.newPassword !=\r\n        this.changePasswordForm.value.confirmPassword\r\n      ) {\r\n        this.messageService.errorToast(\r\n          \"New Password and confirm Password don't match\"\r\n        );\r\n      } else {\r\n        this.spinner.show();\r\n        let requestBody = {\r\n          userNameOrEmail: this.userName,\r\n          oldPassword: this.commonService.encryptData(\r\n            this.changePasswordForm.value.currentPassword\r\n          ),\r\n          newPassword: this.commonService.encryptData(\r\n            this.changePasswordForm.value.newPassword.trim()\r\n          ),\r\n        };\r\n        this.commonService.changePassword(requestBody).subscribe((res: any) => {\r\n          if (res.isSuccess) {\r\n            this.isResetPasswordEnable = false;\r\n            this.removeLocalStorageData();\r\n            setTimeout(() => {\r\n              this.generateCaptcha();\r\n            }, 0);\r\n            this.changePasswordForm.reset();\r\n            this.messageService.successToast('Password changed successfully');\r\n            this.commonService.userLoggedIn.next(false); // not to tell the app component that user logged in so that we can start the count()\r\n          } else {\r\n            this.messageService.errorToast(res.errorMessage);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showPopupRegardingResolution() {\r\n    var dialogRef = this._dialog.open(ConfirmationDialogComponent, {\r\n      width: '24.514vw', //353px\r\n      height: '12.083vw',\r\n      data: {\r\n        header: 'Please note',\r\n        data: {\r\n          bodyData: `This application is optimized for standard screen resolutions.`,\r\n        },\r\n        button: {\r\n          isSubmit: true,\r\n          submitbtnText: 'Ok',\r\n          isCancel: false,\r\n          isDelete: false,\r\n          hideAllButtonsLeftSubmit: true,\r\n        },\r\n      },\r\n    });\r\n\r\n    dialogRef.disableClose = true;\r\n\r\n    // dialogRef.afterClosed().subscribe((result: any) => {\r\n\r\n    // });\r\n  }\r\n}\r\n","<div>\r\n  <div\r\n    class=\"text-center d-flex align-items-center justify-content-center\"\r\n    [ngClass]=\"{ 'mb-5-vw': userRole == 'SuperAdmin' }\"\r\n    style=\"height: 8.333vw !important\"\r\n    *ngIf=\"\r\n      currentUrl == '/setup' || currentUrl == '404' || userRole != 'SuperAdmin'\r\n    \"\r\n  >\r\n    <div style=\"width: 11.181vw !important\">\r\n      <img\r\n        id=\"sideBarLogo\"\r\n        src=\"../../assets/images/esg_nav_logo.png\"\r\n        alt=\"logo\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"w-100 d-flex justify-content-center mb-5-vw\"\r\n    *ngIf=\"\r\n      userRole == 'SuperAdmin' && currentUrl != '/setup' && currentUrl != '404'\r\n    \"\r\n  >\r\n    <div class=\"circular-image\">\r\n      <img\r\n        id=\"imageCursor sideBarLogo\"\r\n        [src]=\"\r\n          imageUrl\r\n            ? imageUrl\r\n            : 'https://icon-library.com/images/generic-user-icon/generic-user-icon-9.jpg'\r\n        \"\r\n        alt=\"\"\r\n        srcset=\"\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div id=\"scrollableHeight\">\r\n    <ul\r\n      class=\"list-unstyled\"\r\n      [ngClass]=\"userRole != 'SuperAdmin' || userRole != 'Admin' ? 'mb-0' : ''\"\r\n      *ngFor=\"let menu of sidebarMenu\"\r\n    >\r\n      <li\r\n        *ngIf=\"menu.isVisible\"\r\n        routerLink=\"{{ menu?.routerLink }}\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        (click)=\"routeChange(menu.routerLink)\"\r\n        class=\"fw-600 d-flex align-items-center\"\r\n        [ngClass]=\"\r\n          userRole == 'SuperAdmin' || userRole == 'Admin'\r\n            ? 'fs-16-vw'\r\n            : 'fs-13-vw'\r\n        \"\r\n      >\r\n        <div class=\"ms-3-vw me-2-vw\">\r\n          <img id=\"icon\" *ngIf=\"menu.icon\" [src]=\"menu.icon\" />\r\n        </div>\r\n        &nbsp; <span>{{ menu.name }}</span>\r\n      </li>\r\n    </ul>\r\n    <ul class=\"list-unstyled\" style=\"position: absolute; bottom: 0\">\r\n      <!-- <li class=\"d-flex justify-content-between\">\r\n                <div class=\"d-flex\">\r\n                    &nbsp; <div class=\"circular-image-sm\">\r\n                        <img src=\"https://wallpapercave.com/wp/wp11323224.jpg\" alt=\"\">                        \r\n                    </div>\r\n                    <span class=\"d-flex align-items-center text-white ms-2\" for=\"\">{{userName}}</span> \r\n                </div> \r\n                <img (click)=\"logOut()\" src=\"../../../../assets/images/logout_logo.png\" alt=\"\">\r\n            </li> -->\r\n      <li class=\"bottom-li d-flex justify-content-between align-items-center\">\r\n        <!-- <div class=\"\"> -->\r\n        <img\r\n          src=\"{{ profile }}\"\r\n          alt=\"User Image\"\r\n          class=\"user-image me-2\"\r\n          onError=\"this.src='../../../../assets/images/default.jpg'\"\r\n          (click)=\"cl()\"\r\n        />\r\n        <!-- onError=\"this.src='../../../../assets/images/default.PNG'\" -->\r\n        <span class=\"user-email fs-16-vw\">{{ userName }}</span>\r\n        <!-- </div> -->\r\n        <img\r\n          (click)=\"logOut()\"\r\n          src=\"../../../../assets/images/logout_logo.png\"\r\n          alt=\"Logout\"\r\n          class=\"logout-icon\"\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonService } from 'src/app/services/common/common.service';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { ConfirmationDialogComponent } from '../../shared/confirmation-dialog/confirmation-dialog.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n})\r\nexport class SidebarComponent {\r\n  imageUrl: any =\r\n    'https://icon-library.com/images/generic-user-icon/generic-user-icon-9.jpg';\r\n  currentUrl!: any;\r\n  userName!: String;\r\n  validRoute: any[] = [];\r\n\r\n  sidebarMenu: any[] = [];\r\n  userRole: any;\r\n  profile: any;\r\n\r\n  constructor(\r\n    private changeDetector: ChangeDetectorRef,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private messageService: MessageService,\r\n    private _dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userName = JSON.parse(localStorage.getItem('userData')!).username;\r\n    this.currentUrl = window.location.pathname;\r\n    let image = localStorage.getItem('imageUrl');\r\n    if (image && this.currentUrl != '/setup')\r\n      this.imageUrl = localStorage.getItem('imageUrl');\r\n    this.changeDetector.detectChanges();\r\n    let userRole = JSON.parse(localStorage.getItem('userData')!)?.roleName;\r\n    this.userRole =\r\n      userRole == 'SuperAdmin' || userRole == 'Admin' ? userRole : 'user';\r\n\r\n    this.sidebarMenu = JSON.parse(localStorage.getItem('validRoutes')!);\r\n    // console.log('sidebar', this.sidebarMenu);\r\n    if (this.userRole != 'user') {\r\n      this.sidebarMenu = CommonService.superAdminMenu;\r\n    } else {\r\n      this.sidebarMenu = this.commonService.userMenu;\r\n    }\r\n\r\n    if (JSON.parse(localStorage.getItem('userData')!).Photo) {\r\n      this.profile =\r\n        environment.apiHostName +\r\n        '/' +\r\n        JSON.parse(localStorage.getItem('userData')!).Photo;\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    var dialogRef = this._dialog.open(ConfirmationDialogComponent, {\r\n      width: '23.472vw',\r\n      // height: '161px',\r\n      data: {\r\n        header: 'Logout ?',\r\n        data: {\r\n          bodyData: `Are you sure, you want to Logout ?`,\r\n        },\r\n        button: {\r\n          isSubmit: true,\r\n          submitbtnText: 'Logout',\r\n          isCancel: true,\r\n          isDelete: false,\r\n        },\r\n      },\r\n    });\r\n    dialogRef.disableClose = true;\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result == 'ok') {\r\n        this.spinner.show();\r\n        this.commonService.logout().subscribe((res: any) => {\r\n          localStorage.clear();\r\n          this.router.navigate(['/login']);\r\n          this.spinner.hide();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  routeChange(path: any) {\r\n    this.currentUrl = path;\r\n    let image = localStorage.getItem('imageUrl');\r\n    if (image && (path != '/setup' || path != '404'))\r\n      this.imageUrl = localStorage.getItem('imageUrl');\r\n    this.profile =\r\n      environment.apiHostName +\r\n      '/' +\r\n      JSON.parse(localStorage.getItem('userData')!).Photo;\r\n  }\r\n\r\n  cl() {\r\n    console.log((this.sidebarMenu = this.sidebarMenu));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-common-layout',\r\n  templateUrl: './common-layout.component.html',\r\n  styleUrls: ['./common-layout.component.scss'],\r\n})\r\nexport class CommonLayoutComponent {}\r\n","<div id=\"sidebar\">\r\n  <app-sidebar></app-sidebar>\r\n</div>\r\n\r\n<div id=\"content\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\n\r\nexport const logGuardGuard: CanActivateFn = (route, state) => {\r\n  /* if we have data in localstorage than stop user\r\n  from going to login page \r\n*/\r\n\r\n  const _router = inject(Router);\r\n  var array = ['Manager', 'Operator', 'Supervisor'];\r\n\r\n  if (localStorage.getItem('authToken')) {\r\n    if (\r\n      array.includes(JSON.parse(localStorage.getItem('userData')!)?.roleName)\r\n    ) {\r\n      _router.navigate(['/dashboard']);\r\n      return false;\r\n    } else if (\r\n      JSON.parse(localStorage.getItem('userData')!)?.roleName == 'SuperAdmin' ||\r\n      JSON.parse(localStorage.getItem('userData')!)?.roleName == 'Admin'\r\n    ) {\r\n      _router.navigate(['/setup']);\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n","import { AfterViewInit, Component } from '@angular/core';\r\nimport { CommonService } from 'src/app/services/common/common.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgxSpinner, NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { Router } from '@angular/router';\r\ndeclare const bootstrap: any;\r\n\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.scss'],\r\n})\r\nexport class ForgetPasswordComponent implements AfterViewInit {\r\n  ForgotForm: FormGroup;\r\n  ForgetPassword = {\r\n    UserEmailId: '',\r\n  };\r\n  constructor(\r\n    private commonService: CommonService,\r\n    private _fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private message: MessageService,\r\n    private router: Router\r\n  ) {\r\n    this.ForgotForm = this._fb.group({\r\n      UserEmailId: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.startCarouselManual();\r\n  }\r\n\r\n  EmailVerify() {\r\n    if (this.ForgotForm.invalid) {\r\n      this.ForgotForm.markAllAsTouched();\r\n      this.message.errorToast('Please fill all required fields');\r\n    } else {\r\n      if (\r\n        !/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/.test(\r\n          this.ForgotForm.value.UserEmailId\r\n        )\r\n      ) {\r\n        this.message.errorToast('Please enter a valid email');\r\n      } else {\r\n        this.spinner.show();\r\n\r\n        let requestBody = {\r\n          userMailID: this.ForgotForm.value.UserEmailId,\r\n        };\r\n        localStorage.setItem('userMailID', JSON.stringify(requestBody));\r\n\r\n        this.commonService.sendOTP(requestBody).subscribe((res: any) => {\r\n          this.spinner.hide();\r\n          if (res.data) {\r\n            this.message.successToast(\r\n              'Otp has been sent on your mail successfully'\r\n            );\r\n            this.router.navigate(['/VerifyOtp']);\r\n          } else {\r\n            this.message.errorToast(res.errorMessage);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  startCarouselManual() {\r\n    setTimeout(() => {\r\n      var myCarousel = document.querySelector('#carouselExampleControls12');\r\n      var carousel = new bootstrap.Carousel(myCarousel, {\r\n        interval: 4000,\r\n        wrap: true,\r\n        touch: false,\r\n        keyboard: false,\r\n      });\r\n      console.log(carousel);\r\n    }, 0);\r\n  }\r\n}\r\n","<div class=\"container-fluid Forgotcomponent\">\r\n  <div class=\"row d-flex justify-content-center\" id=\"mainRow\">\r\n    <div class=\"col-lg-7 px-0\" id=\"carouselDiv\">\r\n      <div\r\n        id=\"carouselExampleControls12\"\r\n        class=\"carousel slide\"\r\n        data-bs-ride=\"carousel\"\r\n        data-bs-pause=\"false\"\r\n        data-bs-interval=\"4000\"\r\n      >\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <img\r\n              src=\"../../../../assets/images/image1.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img\r\n              src=\"../../../../assets/images/image2.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img\r\n              src=\"../../../../assets/images/image3.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4 col-lg-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 text-center mb-4-vw\" style=\"margin-top: 10%\">\r\n          <img src=\"../../../../assets/images/login_logo.png\" width=\"40%\" />\r\n        </div>\r\n        <div class=\"col-12 d-flex justify-content-center\">\r\n          <div\r\n            class=\"loginFornt\"\r\n            style=\"font-weight: bold; font-size: 1.736vw; padding-top: 8%\"\r\n          >\r\n            Forgot Password\r\n          </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8 mt-5-vw\">\r\n          <form autocomplete=\"off\" [formGroup]=\"ForgotForm\">\r\n            <label for=\"Enter Registered Email\" class=\"loginFornt fs-16-vw\"\r\n              >Enter Registered Email</label\r\n            ><br />\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              class=\"w-100 form-control shadow-none fs-14-vw\"\r\n              formControlName=\"UserEmailId\"\r\n              placeholder=\"Enter Email\"\r\n            />\r\n            <span class=\"loginFornt fs-14-vw\"\r\n              >We will send a verification code to the entered email if it is\r\n              found registered with us.\r\n            </span>\r\n            <br />\r\n            <br />\r\n            <button\r\n              class=\"btn w-100 mt-3-vw NextButton shadow-none fs-16-vw\"\r\n              type=\"submit\"\r\n              (click)=\"EmailVerify()\"\r\n            >\r\n              Next\r\n            </button>\r\n            <button\r\n              class=\"btn w-100 mt-3-vw BackButton shadow-none fs-16-vw\"\r\n              type=\"submit\"\r\n              [routerLink]=\"['/login']\"\r\n            >\r\n              Back\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\r\nimport { CommonService } from 'src/app/services/common/common.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgxSpinner, NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { Router } from '@angular/router';\r\ndeclare const bootstrap: any;\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.scss'],\r\n})\r\nexport class OtpComponent implements OnDestroy, AfterViewInit {\r\n  OtpForm: FormGroup;\r\n  value: any;\r\n  mailId: any;\r\n  constructor(\r\n    private commonService: CommonService,\r\n    private _fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private message: MessageService,\r\n    private router: Router\r\n  ) {\r\n    var Email = localStorage.getItem('userMailID');\r\n    this.value = JSON.parse(Email!);\r\n    this.mailId = this.value.userMailID;\r\n    this.OtpForm = this._fb.group({\r\n      OTP: ['', [Validators.required]],\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this.startCarouselManual();\r\n  }\r\n  ngOnDestroy(): void {\r\n    // throw new Error('Method not implemented.');\r\n    localStorage.removeItem('userMailID');\r\n  }\r\n  ChangemailId() {\r\n    this.router.navigate(['/forgetpassword']);\r\n  }\r\n  ResendOTP() {\r\n    this.spinner.show();\r\n    let requestBody = {\r\n      userMailID: this.mailId,\r\n    };\r\n    localStorage.setItem('userMailID', JSON.stringify(requestBody));\r\n\r\n    this.commonService.sendOTP(requestBody).subscribe((res: any) => {\r\n      this.spinner.hide();\r\n      if (res.data) {\r\n        this.message.successToast('Code send Successfully');\r\n      } else {\r\n        this.message.errorToast(res.errorMessage);\r\n      }\r\n    });\r\n  }\r\n  OTPSend() {\r\n    if (this.OtpForm.invalid) {\r\n      this.OtpForm.markAllAsTouched();\r\n      this.message.errorToast('Please fill all required fields');\r\n    } else {\r\n      this.spinner.show();\r\n      if (localStorage.getItem('userMailID')) {\r\n        var Email = localStorage.getItem('userMailID');\r\n        var emaildt = JSON.parse(Email!);\r\n        let requestBody = {\r\n          email: emaildt.userMailID,\r\n          otp: this.OtpForm.value.OTP,\r\n        };\r\n\r\n        this.commonService.VerifyOTP(requestBody).subscribe((res: any) => {\r\n          this.spinner.hide();\r\n          if (res.data) {\r\n            this.message.successToast('New password has shared on the mail id');\r\n            this.router.navigate(['/login']);\r\n          } else {\r\n            this.message.errorToast(res.errorMessage);\r\n          }\r\n        });\r\n      } else {\r\n        this.message.errorToast('No Email found');\r\n      }\r\n    }\r\n  }\r\n\r\n  startCarouselManual() {\r\n    setTimeout(() => {\r\n      var myCarousel = document.querySelector('#carouselExampleControls2');\r\n      var carousel = new bootstrap.Carousel(myCarousel, {\r\n        interval: 4000,\r\n        wrap: true,\r\n        touch: false,\r\n        keyboard: false,\r\n      });\r\n      console.log(carousel);\r\n    }, 0);\r\n  }\r\n}\r\n","<div class=\"container-fluid otpComponent\">\r\n  <div class=\"row d-flex justify-content-center\" id=\"mainRow\">\r\n    <div class=\"col-lg-7 px-0\" id=\"carouselDiv\">\r\n      <div\r\n        id=\"carouselExampleControls2\"\r\n        class=\"carousel slide\"\r\n        data-bs-ride=\"carousel\"\r\n      >\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <img\r\n              src=\"../../../../assets/images/image1.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img\r\n              src=\"../../../../assets/images/image2.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img\r\n              src=\"../../../../assets/images/image3.png\"\r\n              class=\"d-block w-100\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4 col-lg-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 text-center mb-4-vw\" style=\"margin-top: 10%\">\r\n          <img src=\"../../../../assets/images/login_logo.png\" width=\"40%\" />\r\n        </div>\r\n        <div class=\"col-12 d-flex justify-content-center\">\r\n          <div\r\n            class=\"loginFornt\"\r\n            style=\"font-weight: bold; font-size: 1.736vw; padding-top: 5%\"\r\n          >\r\n            Enter the 6-digit code\r\n          </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8 mt-5-vw\">\r\n          <form autocomplete=\"off\" [formGroup]=\"OtpForm\">\r\n            <label for=\"\" class=\"loginFornt fs-12-vw\"\r\n              >Check <b>{{ this.mailId }}</b> for the<br />\r\n              verification code.\r\n              <a class=\"Resend\" (click)=\"ChangemailId()\"\r\n                ><b>Change</b></a\r\n              ></label\r\n            ><br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              class=\"w-100 form-control shadow-none fs-14-vw\"\r\n              formControlName=\"OTP\"\r\n              placeholder=\"Enter Code\"\r\n              maxlength=\"6\"\r\n              appNumber\r\n            />\r\n            <label class=\"fs-14-vw\" style=\"float: left; margin-top: 1%\"\r\n              ><a class=\"Resend\" (click)=\"ResendOTP()\"\r\n                ><b class=\"fs-14-vw\">Resend Code</b></a\r\n              ></label\r\n            >\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <button\r\n              class=\"btn w-100 mt-3-vw submitButton shadow-none fs-16-vw\"\r\n              type=\"submit\"\r\n              (click)=\"OTPSend()\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <span class=\"loginFornt fs-12-vw\"\r\n              >If you don't see the code in your inbox, check your spam folder.\r\n              If it's not there, the email address may not be confirmed or it\r\n              may not match an existing account</span\r\n            >\r\n            <br />\r\n            <br />\r\n            <label\r\n              class=\"loginFornt fs-14-vw\"\r\n              style=\"float: left; margin-top: 1%\"\r\n              ><b><u>Can't access this email?</u></b></label\r\n            >\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-un-authorised',\r\n  templateUrl: './un-authorised.component.html',\r\n  styleUrls: ['./un-authorised.component.scss'],\r\n})\r\nexport class UnAuthorisedComponent {}\r\n","<img src=\"../../../assets/images/risk_action.png\" />\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent {}\r\n","<img src=\"../../../assets/images/page_not_found.png\" style=\"width: 100%\" />\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from '../components/common/login/login.component';\r\nimport { CommonLayoutComponent } from '../components/common/common-layout/common-layout.component';\r\n// import { authGuard } from './auth.guard';\r\nimport { logGuardGuard } from '../guards/log-guard.guard';\r\nimport { ForgetPasswordComponent } from '../components/common/forget-password/forget-password.component';\r\nimport { OtpComponent } from '../components/common/otp/otp.component';\r\nimport { authGuard } from '../guards/auth.guard';\r\nimport { childGuard } from '../guards/child.guard';\r\nimport { UnAuthorisedComponent } from '../components/un-authorised/un-authorised.component';\r\nimport { PageNotFoundComponent } from '../components/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'login',\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [logGuardGuard],\r\n  },\r\n  {\r\n    path: 'forgetpassword',\r\n    component: ForgetPasswordComponent,\r\n  },\r\n  {\r\n    path: 'VerifyOtp',\r\n    component: OtpComponent,\r\n  },\r\n  {\r\n    path: 'Unauthorised-page',\r\n    component: UnAuthorisedComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    component: CommonLayoutComponent,\r\n    data: { role: ['SuperAdmin', 'Admin'] },\r\n    loadChildren: () =>\r\n      import('../components/organizationAdmin/organization.module').then(\r\n        m => m.OrganizationModule\r\n      ),\r\n    // canActivate: [authGuard],\r\n    // canActivateChild: [logGuardGuard],\r\n    // canActivateChild: [authGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    component: CommonLayoutComponent,\r\n    data: { role: ['Manager', 'Operator', 'Supervisor'] },\r\n    loadChildren: () =>\r\n      import('../components/supervisor/supervisor.module').then(\r\n        m => m.SupervisorModule\r\n      ),\r\n    // canActivate: [authGuard],\r\n    // canActivateChild: [authGuard],\r\n  },\r\n  {\r\n    path: '**',\r\n    component: PageNotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { BehaviorSubjectCollectionService } from './services/behaviorSubjectCollection.service';\r\nimport { CommonService } from './services/common/common.service';\r\nimport { UserAccessManagementService } from './services/user-access-management.service';\r\nimport { NgxSpinner, NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'ESG';\r\n  timerUnsubscribe: any;\r\n  validRoute: any[] = [];\r\n  sidebarMenu: any[] = [];\r\n  flag: boolean = false;\r\n\r\n  constructor(\r\n    private behaviorSubjectCollection: BehaviorSubjectCollectionService,\r\n    private commonService: CommonService,\r\n    private _userAccessSvc: UserAccessManagementService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    if (this.commonService.isUserLoggedIn()) {\r\n      this.count();\r\n    }\r\n    this.commonService.userLoggedIn.subscribe((res: any) => {\r\n      this.count();\r\n    });\r\n  }\r\n\r\n  topToWindow() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  count() {\r\n    let userData: any = JSON.parse(localStorage.getItem('userData')!);\r\n    let accessTokenExpirationTime = userData?.accessTokenExpirationTime;\r\n\r\n    const twoMinutesInMilliseconds = 2 * 60 * 1000; // 2 minutes in milliseconds\r\n\r\n    // Calculate the time to wait before triggering the action\r\n    if (accessTokenExpirationTime) {\r\n      const timeToWait =\r\n        new Date(accessTokenExpirationTime).getTime() -\r\n        new Date().getTime() -\r\n        twoMinutesInMilliseconds;\r\n\r\n      // console.log(timeToWait, 'time to wait');\r\n\r\n      // Create a timer observable\r\n      const timer$ = timer(timeToWait);\r\n\r\n      // Subscribe to the timer observable and perform the action\r\n      this.timerUnsubscribe = timer$.subscribe(() => {\r\n        // Your action to perform 2 minutes before the target date and time\r\n        this.generateRefreshToken();\r\n      });\r\n    }\r\n  }\r\n\r\n  generateRefreshToken() {\r\n    this.spinner.show();\r\n    this.timerUnsubscribe.unsubscribe();\r\n    this.commonService.GenerateRefreshToken().subscribe(\r\n      (res: any) => {\r\n        var obj = JSON.parse(localStorage.getItem('userData')!);\r\n        obj.accessToken = res.accessToken;\r\n        obj.refreshToken = res.refreshToken;\r\n        obj.accessTokenExpirationTime = res.accessTokenExpirationTime;\r\n        localStorage.setItem('userData', JSON.stringify(obj));\r\n        localStorage.setItem('authToken', res?.accessToken);\r\n        this.count();\r\n        this.spinner.hide();\r\n      },\r\n      (err: any) => {\r\n        console.log(err);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<router-outlet (activate)=\"topToWindow()\">\r\n  <ngx-spinner\r\n    bdOpacity=\"0.9\"\r\n    size=\"medium\"\r\n    color=\"#01444b\"\r\n    type=\"ball-clip-rotate\"\r\n    [fullScreen]=\"true\"\r\n  >\r\n    <p class=\"loadingText fs-16-vw\" style=\"color: #fff\">Loading...</p>\r\n  </ngx-spinner>\r\n</router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from './services/message.service';\r\n\r\n@Injectable()\r\nexport class ApiInterceptorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    // return next.handle(request);\r\n    const token: any = localStorage.getItem('authToken');\r\n    let newRequest;\r\n\r\n    if (token && !request.url.includes('/LOGIN/api/userlogin'))\r\n      newRequest = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Cache-Control': 'no-cache, no-store',\r\n          Pragma: 'no-cache',\r\n        },\r\n      });\r\n    else newRequest = request;\r\n\r\n    return next.handle(newRequest).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        // this.spinner.hide();\r\n        if (error instanceof HttpErrorResponse && error.status == 401) {\r\n          this.messageService.errorToast('Your session has been expired.');\r\n          // console.error('An error occurred:', error);\r\n          this.spinner.hide();\r\n          localStorage.clear();\r\n          this.router.navigate(['/login']);\r\n        } else if (error.status == 403) {\r\n          console.log(error);\r\n\r\n          this.messageService.errorToast(error.error);\r\n          this.spinner.hide();\r\n        } else {\r\n          this.spinner.hide();\r\n          this.messageService.errorToast(error?.error?.errorMessage);\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './route/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SidebarComponent } from './components/common/sidebar/sidebar.component';\r\nimport { CommonLayoutComponent } from './components/common/common-layout/common-layout.component';\r\nimport { LoginComponent } from './components/common/login/login.component';\r\nimport { SharedModule } from './components/shared/shared.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AddUserComponent } from './components/organizationAdmin/add-user/add-user.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ApiInterceptorInterceptor } from './api-interceptor.interceptor';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { ForgetPasswordComponent } from './components/common/forget-password/forget-password.component';\r\nimport { OtpComponent } from './components/common/otp/otp.component';\r\nimport { logGuardGuard } from './guards/log-guard.guard';\r\nimport { UnAuthorisedComponent } from './components/un-authorised/un-authorised.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found.component';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RecaptchaFormsModule, RecaptchaModule } from 'ng-recaptcha';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidebarComponent,\r\n    CommonLayoutComponent,\r\n    LoginComponent,\r\n    AddUserComponent,\r\n    ForgetPasswordComponent,\r\n    OtpComponent,\r\n    UnAuthorisedComponent,\r\n    PageNotFoundComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    BrowserAnimationsModule,\r\n    NgxPaginationModule,\r\n    TreeModule,\r\n    RecaptchaModule,\r\n    RecaptchaFormsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ApiInterceptorInterceptor,\r\n      multi: true,\r\n    },\r\n    DatePipe,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","/// <reference types=\"@angular/localize\" />\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"x_google_ignoreList":[]}